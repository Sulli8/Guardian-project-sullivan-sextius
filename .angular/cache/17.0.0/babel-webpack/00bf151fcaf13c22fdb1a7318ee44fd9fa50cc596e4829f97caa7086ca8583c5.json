{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  http;\n  userData; // Stockage des données utilisateur dans le service\n  constructor(http) {\n    this.http = http;\n  }\n  // Méthode pour soumettre les données utilisateur à l'API\n  submitUserData() {\n    console.log(\"ENTER SUBMIT\");\n    return this.getUserData().pipe(switchMap(user => {\n      // Définir les en-têtes de la requête\n      const headers = new HttpHeaders({\n        'Content-Type': 'application/json'\n      });\n      // Effectuer la requête POST\n      return this.http.post('http://localhost:3001/api/create_user', user, {\n        headers\n      });\n    }));\n  }\n  // Méthode pour mettre à jour les données utilisateur\n  updateUserData(data) {\n    this.userData = {\n      ...this.userData,\n      ...data\n    }; // Fusionne les nouvelles données\n  }\n\n  getUserData() {\n    return of(this.userData); // Retourne userData sous forme d'Observable\n  }\n\n  static ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","of","switchMap","UserService","http","userData","constructor","submitUserData","console","log","getUserData","pipe","user","headers","post","updateUserData","data","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/services/user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { User } from '../models/user.model';\nimport { Observable, of } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserService {\n  private userData: User; // Stockage des données utilisateur dans le service\n  \n  constructor(private http: HttpClient) {}\n\n    // Méthode pour soumettre les données utilisateur à l'API\n    submitUserData(): Observable<any> {\n      console.log(\"ENTER SUBMIT\")\n      return this.getUserData().pipe(\n        switchMap(user => {\n          // Définir les en-têtes de la requête\n          const headers = new HttpHeaders({\n            'Content-Type': 'application/json'\n          });\n  \n          // Effectuer la requête POST\n          return this.http.post('http://localhost:3001/api/create_user', user, { headers });\n        })\n      );\n    }\n\n  // Méthode pour mettre à jour les données utilisateur\n  updateUserData(data: any) {\n    this.userData = { ...this.userData, ...data }; // Fusionne les nouvelles données\n  }\n\n  getUserData(): Observable<User> {\n    return of(this.userData); // Retourne userData sous forme d'Observable\n  }\n\n\n}\n"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAqBC,EAAE,QAAQ,MAAM;AACrC,SAASC,SAAS,QAAQ,gBAAgB;;;AAK1C,OAAM,MAAOC,WAAW;EAGFC,IAAA;EAFZC,QAAQ,CAAO,CAAC;EAExBC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAe;EAErC;EACAG,cAAcA,CAAA;IACZC,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC;IAC3B,OAAO,IAAI,CAACC,WAAW,EAAE,CAACC,IAAI,CAC5BT,SAAS,CAACU,IAAI,IAAG;MACf;MACA,MAAMC,OAAO,GAAG,IAAIb,WAAW,CAAC;QAC9B,cAAc,EAAE;OACjB,CAAC;MAEF;MACA,OAAO,IAAI,CAACI,IAAI,CAACU,IAAI,CAAC,uCAAuC,EAAEF,IAAI,EAAE;QAAEC;MAAO,CAAE,CAAC;IACnF,CAAC,CAAC,CACH;EACH;EAEF;EACAE,cAAcA,CAACC,IAAS;IACtB,IAAI,CAACX,QAAQ,GAAG;MAAE,GAAG,IAAI,CAACA,QAAQ;MAAE,GAAGW;IAAI,CAAE,CAAC,CAAC;EACjD;;EAEAN,WAAWA,CAAA;IACT,OAAOT,EAAE,CAAC,IAAI,CAACI,QAAQ,CAAC,CAAC,CAAC;EAC5B;;;qBA5BWF,WAAW,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;WAAXjB,WAAW;IAAAkB,OAAA,EAAXlB,WAAW,CAAAmB,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}