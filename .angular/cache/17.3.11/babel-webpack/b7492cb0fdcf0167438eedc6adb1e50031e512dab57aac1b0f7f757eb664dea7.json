{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// Import PrimeNG Modules\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button'; // Si vous utilisez pButton\nimport { InputTextModule } from 'primeng/inputtext'; // Pour p-inputText\nimport { SpinnerModule } from 'primeng/spinner'; // Pour p-spinner\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction WizardComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function WizardComponent_div_11_Template_div_click_0_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.goToStep(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r2 === ctx_r2.currentStep);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \\u00C9tape \", step_r4.step, \" \");\n  }\n}\nfunction WizardComponent_div_13_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 19);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_13_input_3_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id], $event) || (ctx_r2.responses[question_r6._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id);\n  }\n}\nfunction WizardComponent_div_13_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 20)(2, \"input\", 21);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_13_div_4_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id + \"-yes\"], $event) || (ctx_r2.responses[question_r6._id + \"-yes\"] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 22);\n    i0.ɵɵtext(4, \"Oui\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"label\", 20)(6, \"input\", 21);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_13_div_4_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id + \"-no\"], $event) || (ctx_r2.responses[question_r6._id + \"-no\"] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 22);\n    i0.ɵɵtext(8, \"Non\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id + \"-yes\"]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id + \"-yes\")(\"name\", \"question-\" + question_r6._id + \"-yes\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id + \"-no\"]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id + \"-no\")(\"name\", \"question-\" + question_r6._id + \"-no\");\n  }\n}\nfunction WizardComponent_div_13_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 23);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_13_input_5_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id], $event) || (ctx_r2.responses[question_r6._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id);\n  }\n}\nfunction WizardComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, WizardComponent_div_13_input_3_Template, 1, 2, \"input\", 16)(4, WizardComponent_div_13_div_4_Template, 9, 6, \"div\", 17)(5, WizardComponent_div_13_input_5_Template, 1, 2, \"input\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", \"question-\" + question_r6._id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(question_r6.text);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"text\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"boolean\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"rating\");\n  }\n}\nfunction WizardComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function WizardComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.submitWizard());\n    });\n    i0.ɵɵtext(1, \"Soumettre\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class WizardComponent {\n  router;\n  apiService;\n  title = '';\n  onSubmit = new EventEmitter();\n  currentStep = 0;\n  responses = {};\n  steps;\n  constructor(router, apiService) {\n    this.router = router;\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    // Charger les questions depuis l'API\n    this.apiService.getQuestions().subscribe(questions => {\n      // Organiser les questions par étape\n      console.log(questions);\n      this.steps = this.organizeQuestionsByStep(questions);\n    });\n  }\n  organizeQuestionsByStep(questions) {\n    const steps = [];\n    questions.questions.forEach(question => {\n      // Chercher l'étape existante pour cette question\n      const step = steps.find(s => s.step === question.step);\n      // Si l'étape n'existe pas encore, on la crée\n      if (!step) {\n        steps.push({\n          step: question.step,\n          questions: [question]\n        });\n      } else {\n        // Si l'étape existe déjà, on ajoute la question\n        step.questions.push(question);\n      }\n    });\n    return steps;\n  }\n  goToStep(index) {\n    if (index >= 0 && index < this.steps.length) {\n      this.currentStep = index;\n    }\n  }\n  nextStep() {\n    if (this.currentStep < this.steps.length - 1) {\n      this.currentStep++;\n    }\n  }\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n  submitWizard($event) {\n    // Afficher la fenêtre de confirmation avec SweetAlert2\n    Swal.fire({\n      title: 'Êtes-vous sûr de vouloir soumettre le questionnaire?',\n      text: 'Vous ne pourrez pas modifier vos réponses une fois soumises.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui, soumettre',\n      cancelButtonText: 'Non, annuler',\n      reverseButtons: true // Inverse l'ordre des boutons (Annuler à gauche, Soumettre à droite)\n    }).then(result => {\n      if (result.isConfirmed) {\n        // Si l'utilisateur confirme, on peut envoyer les réponses\n        this.handleSubmit($event);\n        Swal.fire('Soumis!', 'Vos réponses ont été envoyées avec succès.', 'success');\n        // Appelez la logique de soumission ici, par exemple envoyer les réponses à votre serveur.\n        // this.apiService.submitResponses(responses);\n      } else {\n        // Si l'utilisateur annule, vous pouvez afficher un message d'annulation\n        Swal.fire('Annulé', 'La soumission du questionnaire a été annulée.', 'info');\n      }\n    });\n  }\n  handleSubmit(event) {\n    console.log('Réponses soumises:', this.responses);\n    // 1. Structurer les réponses, si nécessaire\n    const formattedResponses = this.formatResponses(this.responses);\n    // 2. Soumettre les réponses au backend via le service\n    this.apiService.submitResponses(formattedResponses).subscribe(response => {\n      console.log('Réponses envoyées avec succès', response);\n      // Vérifiez si la réponse du backend indique un succès\n      if (response.message === 'Réponses enregistrées avec succès') {\n        // Redirige l'utilisateur vers la page d'accueil\n        this.router.navigate(['/home-page']); // 'home-page' est l'URL vers la page d'accueil\n      }\n      this.onSubmit.emit({\n        success: true,\n        response\n      }); // Émet un événement si l'envoi réussit\n    }, error => {\n      console.error('Erreur lors de l\\'envoi des réponses', error);\n      this.onSubmit.emit({\n        success: false,\n        error\n      }); // Émet un événement en cas d'erreur\n    });\n  }\n  // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n  formatResponses(responses) {\n    // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n    return Object.keys(responses).map(key => ({\n      questionId: key,\n      response: responses[key]\n    }));\n  }\n  static ɵfac = function WizardComponent_Factory(t) {\n    return new (t || WizardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WizardComponent,\n    selectors: [[\"app-wizard\"]],\n    inputs: {\n      title: \"title\",\n      steps: \"steps\"\n    },\n    outputs: {\n      onSubmit: \"onSubmit\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 20,\n    vars: 6,\n    consts: [[1, \"wizard\"], [1, \"title-questionnary\"], [1, \"icon-guardian\"], [\"version\", \"1.0\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"30\", \"height\", \"30\", \"viewBox\", \"0 0 512.000000 512.000000\", \"preserveAspectRatio\", \"xMidYMid meet\"], [\"transform\", \"translate(0.000000,512.000000) scale(0.100000,-0.100000)\", \"fill\", \"#fff\", \"stroke\", \"none\"], [\"d\", \"M1700 4394 c-621 -242 -842 -333 -863 -353 -44 -43 -51 -123 -51 -631 -1 -674 42 -1046 166 -1418 141 -426 475 -845 963 -1212 234 -176 580 -380 645 -380 37 0 192 79 365 187 611 381 1059 881 1236 1382 72 203 131 517 161 851 16 182 17 999 1 1114 -10 66 -16 84 -40 107 -21 20 -236 109 -853 349 -454 177 -841 324 -860 326 -28 4 -202 -61 -870 -322z m1530 -183 c355 -139 691 -270 747 -292 l102 -40 8 -47 c4 -26 8 -231 8 -457 -1 -443 -12 -619 -60 -903 -44 -259 -95 -434 -175 -599 -172 -355 -523 -724 -973 -1023 -118 -79 -310 -190 -327 -190 -32 0 -387 223 -528 332 -413 320 -694 662 -828 1009 -69 178 -128 470 -159 779 -28 283 -30 1068 -3 1096 15 14 1506 592 1523 590 11 -2 310 -117 665 -255z\"], [1, \"span\"], [1, \"steps\"], [\"class\", \"step-class\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"step-content\"], [4, \"ngFor\", \"ngForOf\"], [1, \"navigation\"], [3, \"click\", \"disabled\"], [3, \"click\", 4, \"ngIf\"], [1, \"step-class\", 3, \"click\"], [1, \"label\", 3, \"for\"], [\"class\", \"input-radio on\", \"type\", \"text\", 3, \"ngModel\", \"id\", \"ngModelChange\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"number\", \"min\", \"1\", \"max\", \"5\", 3, \"ngModel\", \"id\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"text\", 1, \"input-radio\", \"on\", 3, \"ngModelChange\", \"ngModel\", \"id\"], [1, \"checkbox-container\"], [\"type\", \"checkbox\", 3, \"ngModelChange\", \"ngModel\", \"id\", \"name\"], [1, \"checkbox-label\"], [\"type\", \"number\", \"min\", \"1\", \"max\", \"5\", 3, \"ngModelChange\", \"ngModel\", \"id\"], [3, \"click\"]],\n    template: function WizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(5, \"svg\", 3)(6, \"g\", 4);\n        i0.ɵɵelement(7, \"path\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(8, \"span\", 6);\n        i0.ɵɵtext(9, \"Guardian\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵtemplate(11, WizardComponent_div_11_Template, 2, 3, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵtemplate(13, WizardComponent_div_13_Template, 6, 5, \"div\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 11)(15, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function WizardComponent_Template_button_click_15_listener() {\n          return ctx.previousStep();\n        });\n        i0.ɵɵtext(16, \"Pr\\u00E9c\\u00E9dent\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function WizardComponent_Template_button_click_17_listener() {\n          return ctx.nextStep();\n        });\n        i0.ɵɵtext(18, \"Suivant\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, WizardComponent_button_19_Template, 2, 0, \"button\", 13);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.steps[ctx.currentStep] == null ? null : ctx.steps[ctx.currentStep].questions);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.currentStep === 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.currentStep === ctx.steps.length - 1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.currentStep === ctx.steps.length - 1);\n      }\n    },\n    dependencies: [FormsModule, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.MaxValidator, i3.NgModel, CommonModule, i4.NgForOf, i4.NgIf, RadioButtonModule, ButtonModule, InputTextModule, SpinnerModule],\n    styles: [\".wizard[_ngcontent-%COMP%] {\\n    max-width: 600px;\\n    margin: 0 auto;\\n    font-family: Arial, sans-serif;\\n  }\\n  \\n  .steps[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .steps[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n    flex: 1;\\n    text-align: center;\\n    padding: 10px;\\n    cursor: pointer;\\n    border-bottom: 2px solid #ccc;\\n  }\\n  \\n  .steps[_ngcontent-%COMP%]   div.active[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n    border-bottom: 2px solid #007bff;\\n  }\\n  \\n  .step-content[_ngcontent-%COMP%] {\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .navigation[_ngcontent-%COMP%] {\\n    text-align: right;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    margin-left: 10px;\\n    padding: 5px 15px;\\n    background-color: #007bff;\\n    color: white;\\n    border: none;\\n    border-radius: 3px;\\n    cursor: pointer;\\n  }\\n\\n  input[type=\\\"text\\\"][_ngcontent-%COMP%] {\\n    padding: 10px;\\n    border: none;\\n      border-bottom-width: medium;\\n      border-bottom-style: none;\\n      border-bottom-color: currentcolor;\\n      background: none;\\n      border-bottom: 1px solid aliceblue;\\n      cursor:pointer ;\\n      color: #fff;\\n  }\\n\\n  input[type=\\\"number\\\"][_ngcontent-%COMP%] {\\n    padding: 10px;\\n    border: none;\\n    border-bottom-width: medium;\\n    border-bottom-style: none;\\n    border-bottom-color: currentcolor;\\n    background: none;\\n    border: 1px solid aliceblue;\\n    cursor:pointer ;\\n    color: #fff;\\n    margin-left: 10px;\\n  }\\n  \\n  .title-questionnary[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    flex-direction: row;\\n    gap:10px;\\n  }\\n\\n  .input-radio.on[_ngcontent-%COMP%]:checked {\\n    box-shadow: 0px 0px 0px 4px #00eb27;\\n    background-color: #51ff6e;\\n}\\n\\n\\n .span[_ngcontent-%COMP%] {\\n    background: radial-gradient(134.26% 244.64% at 42.92% -80.36%, #b301b3 25.45%, #381dbd 100%);\\n    -webkit-background-clip: text;\\n    -webkit-text-fill-color: transparent;\\n  }\\n  .icon-guardian[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    flex-direction: column;\\n    cursor: pointer;\\n}\\n\\n  button[_ngcontent-%COMP%]:disabled {\\n    background-color: #ccc;\\n  }\\n  \\n.step-class[_ngcontent-%COMP%] {\\n  background-color: #007bff3a;\\n  color: #007bff;\\n}\\n.step-content[_ngcontent-%COMP%] {\\n  font-weight: 100;\\n}\\n  .step-content[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n\\n\\n  @media (max-width: 500px) {\\n    .wizard[_ngcontent-%COMP%] {\\n      max-width: 400px;\\n    }\\n  }\\n\\n  \\n\\n.checkbox-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 10px;\\n}\\n\\n.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n  margin-right: 10px;\\n  cursor: pointer;\\n}\\n\\n.checkbox-label[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n\\n.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked {\\n  background-color: #4CAF50; \\n\\n}\\n\\n.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border: 2px solid #4CAF50;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy93aXphcmQvd2l6YXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLDhCQUE4QjtFQUNoQzs7RUFFQTtJQUNFLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsT0FBTztJQUNQLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsZUFBZTtJQUNmLDZCQUE2QjtFQUMvQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixnQ0FBZ0M7RUFDbEM7O0VBRUE7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLFlBQVk7TUFDViwyQkFBMkI7TUFDM0IseUJBQXlCO01BQ3pCLGlDQUFpQztNQUNqQyxnQkFBZ0I7TUFDaEIsa0NBQWtDO01BQ2xDLGVBQWU7TUFDZixXQUFXO0VBQ2Y7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsWUFBWTtJQUNaLDJCQUEyQjtJQUMzQix5QkFBeUI7SUFDekIsaUNBQWlDO0lBQ2pDLGdCQUFnQjtJQUNoQiwyQkFBMkI7SUFDM0IsZUFBZTtJQUNmLFdBQVc7SUFDWCxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsUUFBUTtFQUNWOztFQUVBO0lBQ0UsbUNBQW1DO0lBQ25DLHlCQUF5QjtBQUM3Qjs7O0NBR0M7SUFDRyw0RkFBNEY7SUFDNUYsNkJBQTZCO0lBQzdCLG9DQUFvQztFQUN0QztFQUNBO0lBQ0UsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGVBQWU7QUFDbkI7O0VBRUU7SUFDRSxzQkFBc0I7RUFDeEI7O0FBRUY7RUFDRSwyQkFBMkI7RUFDM0IsY0FBYztBQUNoQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0VBQ0U7SUFDRSxhQUFhO0VBQ2Y7OztFQUdBO0lBQ0U7TUFDRSxnQkFBZ0I7SUFDbEI7RUFDRjs7RUFFQSxrREFBa0Q7QUFDcEQ7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLHlCQUF5QixFQUFFLG1EQUFtRDtBQUNoRjs7QUFFQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIud2l6YXJkIHtcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgfVxuICBcbiAgLnN0ZXBzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIFxuICAuc3RlcHMgZGl2IHtcbiAgICBmbGV4OiAxO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2NjYztcbiAgfVxuICBcbiAgLnN0ZXBzIGRpdi5hY3RpdmUge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMDA3YmZmO1xuICB9XG4gIFxuICAuc3RlcC1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgXG4gIC5uYXZpZ2F0aW9uIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuICBcbiAgYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBwYWRkaW5nOiA1cHggMTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJvcmRlci1ib3R0b20td2lkdGg6IG1lZGl1bTtcbiAgICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IG5vbmU7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiBjdXJyZW50Y29sb3I7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGFsaWNlYmx1ZTtcbiAgICAgIGN1cnNvcjpwb2ludGVyIDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICB9XG5cbiAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogbWVkaXVtO1xuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IG5vbmU7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogY3VycmVudGNvbG9yO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYWxpY2VibHVlO1xuICAgIGN1cnNvcjpwb2ludGVyIDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuICBcbiAgLnRpdGxlLXF1ZXN0aW9ubmFyeSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZ2FwOjEwcHg7XG4gIH1cblxuICAuaW5wdXQtcmFkaW8ub246Y2hlY2tlZCB7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggNHB4ICMwMGViMjc7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzUxZmY2ZTtcbn1cblxuXG4gLnNwYW4ge1xuICAgIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudCgxMzQuMjYlIDI0NC42NCUgYXQgNDIuOTIlIC04MC4zNiUsICNiMzAxYjMgMjUuNDUlLCAjMzgxZGJkIDEwMCUpO1xuICAgIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xuICAgIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuICAuaWNvbi1ndWFyZGlhbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4gIGJ1dHRvbjpkaXNhYmxlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgfVxuICBcbi5zdGVwLWNsYXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjNhO1xuICBjb2xvcjogIzAwN2JmZjtcbn1cbi5zdGVwLWNvbnRlbnQge1xuICBmb250LXdlaWdodDogMTAwO1xufVxuICAuc3RlcC1jb250ZW50ID4gZGl2IHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9XG5cblxuICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAud2l6YXJkIHtcbiAgICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgfVxuICB9XG5cbiAgLyogU3R5bGVzIHBvdXIgbGVzIGNhc2VzIMODwqAgY29jaGVyIHBlcnNvbm5hbGlzw4PCqWVzICovXG4uY2hlY2tib3gtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmNoZWNrYm94LWNvbnRhaW5lciBpbnB1dCB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uY2hlY2tib3gtbGFiZWwge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmNoZWNrYm94LWNvbnRhaW5lciBpbnB1dDpjaGVja2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDsgLyogQ29sb3JpZXIgbGEgY2FzZSBlbiB2ZXJ0IHF1YW5kIGVsbGUgZXN0IGNvY2jDg8KpZSAqL1xufVxuXG4uY2hlY2tib3gtY29udGFpbmVyIGlucHV0OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiAycHggc29saWQgIzRDQUY1MDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","EventEmitter","FormsModule","RadioButtonModule","ButtonModule","InputTextModule","SpinnerModule","Swal","i0","ɵɵelementStart","ɵɵlistener","WizardComponent_div_11_Template_div_click_0_listener","i_r2","ɵɵrestoreView","_r1","index","ctx_r2","ɵɵnextContext","ɵɵresetView","goToStep","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","currentStep","ɵɵadvance","ɵɵtextInterpolate1","step_r4","step","ɵɵtwoWayListener","WizardComponent_div_13_input_3_Template_input_ngModelChange_0_listener","$event","_r5","question_r6","$implicit","ɵɵtwoWayBindingSet","responses","_id","ɵɵtwoWayProperty","ɵɵproperty","WizardComponent_div_13_div_4_Template_input_ngModelChange_2_listener","_r7","WizardComponent_div_13_div_4_Template_input_ngModelChange_6_listener","WizardComponent_div_13_input_5_Template_input_ngModelChange_0_listener","_r8","ɵɵtemplate","WizardComponent_div_13_input_3_Template","WizardComponent_div_13_div_4_Template","WizardComponent_div_13_input_5_Template","ɵɵtextInterpolate","text","type","WizardComponent_button_19_Template_button_click_0_listener","_r9","submitWizard","WizardComponent","router","apiService","title","onSubmit","steps","constructor","ngOnInit","getQuestions","subscribe","questions","console","log","organizeQuestionsByStep","forEach","question","find","s","push","length","nextStep","previousStep","fire","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","handleSubmit","event","formattedResponses","formatResponses","submitResponses","response","message","navigate","emit","success","error","Object","keys","map","key","questionId","ɵɵdirectiveInject","i1","Router","i2","ApiService","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","WizardComponent_Template","rf","ctx","ɵɵelement","WizardComponent_div_11_Template","WizardComponent_div_13_Template","WizardComponent_Template_button_click_15_listener","WizardComponent_Template_button_click_17_listener","WizardComponent_button_19_Template","i3","DefaultValueAccessor","NumberValueAccessor","CheckboxControlValueAccessor","NgControlStatus","MinValidator","MaxValidator","NgModel","i4","NgForOf","NgIf","styles"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/wizard/wizard.component.ts","/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/wizard/wizard.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/services/api.service';\n// Import PrimeNG Modules\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button'; // Si vous utilisez pButton\nimport { InputTextModule } from 'primeng/inputtext'; // Pour p-inputText\nimport { SpinnerModule } from 'primeng/spinner'; // Pour p-spinner\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.css'],\n  standalone:true,\n  imports:[FormsModule,CommonModule,\n    FormsModule,\n    RadioButtonModule,\n    ButtonModule,\n    InputTextModule,\n    SpinnerModule]\n})\nexport class WizardComponent {\n  @Input() title: string = ''; \n  @Output() onSubmit = new EventEmitter<any>(); \n\n  currentStep = 0;\n  responses: { [key: number]: any } = {};\n  @Input() steps: any[];\n  constructor(private router:Router, private apiService: ApiService) {}\n\n  ngOnInit() {\n   \n    // Charger les questions depuis l'API\n    this.apiService.getQuestions().subscribe((questions) => {\n      // Organiser les questions par étape\n      console.log(questions)\n      this.steps = this.organizeQuestionsByStep(questions);\n    });\n  }\n\n   organizeQuestionsByStep(questions) {\n    const steps = [];\n  \n    questions.questions.forEach((question) => {\n      // Chercher l'étape existante pour cette question\n      const step = steps.find((s) => s.step === question.step);\n      \n      // Si l'étape n'existe pas encore, on la crée\n      if (!step) {\n        steps.push({ step: question.step, questions: [question] });\n      } else {\n        // Si l'étape existe déjà, on ajoute la question\n        step.questions.push(question);\n      }\n    });\n  \n    return steps;\n  }\n  \n\n\n\n  goToStep(index: number) {\n    if (index >= 0 && index < this.steps.length) {\n      this.currentStep = index;\n    }\n  }\n\n  nextStep() {\n    if (this.currentStep < this.steps.length - 1) {\n      this.currentStep++;\n    }\n  }\n\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n  submitWizard($event:any){\n  \n    // Afficher la fenêtre de confirmation avec SweetAlert2\n    Swal.fire({\n      title: 'Êtes-vous sûr de vouloir soumettre le questionnaire?',\n      text: 'Vous ne pourrez pas modifier vos réponses une fois soumises.',\n      icon: 'warning',\n      showCancelButton: true,  // Montre un bouton \"Annuler\"\n      confirmButtonText: 'Oui, soumettre',\n      cancelButtonText: 'Non, annuler',\n      reverseButtons: true  // Inverse l'ordre des boutons (Annuler à gauche, Soumettre à droite)\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Si l'utilisateur confirme, on peut envoyer les réponses\n        this.handleSubmit($event)\n        \n        Swal.fire(\n          'Soumis!',\n          'Vos réponses ont été envoyées avec succès.',\n          'success'\n        );\n        // Appelez la logique de soumission ici, par exemple envoyer les réponses à votre serveur.\n        // this.apiService.submitResponses(responses);\n      } else {\n        // Si l'utilisateur annule, vous pouvez afficher un message d'annulation\n        Swal.fire(\n          'Annulé',\n          'La soumission du questionnaire a été annulée.',\n          'info'\n        );\n      }\n    });\n  }\n  handleSubmit(event:any) {\n    console.log('Réponses soumises:', this.responses);\n\n    // 1. Structurer les réponses, si nécessaire\n    const formattedResponses = this.formatResponses(this.responses);\n\n    // 2. Soumettre les réponses au backend via le service\n    this.apiService.submitResponses(formattedResponses).subscribe(\n      (response) => {\n        console.log('Réponses envoyées avec succès', response);\n        \n        // Vérifiez si la réponse du backend indique un succès\n        if (response.message === 'Réponses enregistrées avec succès') {\n          // Redirige l'utilisateur vers la page d'accueil\n          this.router.navigate(['/home-page']);  // 'home-page' est l'URL vers la page d'accueil\n        }\n        this.onSubmit.emit({ success: true, response });  // Émet un événement si l'envoi réussit\n      },\n      (error) => {\n        console.error('Erreur lors de l\\'envoi des réponses', error);\n        this.onSubmit.emit({ success: false, error });  // Émet un événement en cas d'erreur\n      }\n    );\n  }\n\n  // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n  formatResponses(responses: any) {\n    // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n    return Object.keys(responses).map((key) => ({\n      questionId: key,\n      response: responses[key]\n    }));\n  }\n}\n","<div class=\"wizard\">\n  <div class=\"title-questionnary\">\n    <h2>{{ title }}</h2>\n    <div class=\"icon-guardian\">\n      <svg version=\"1.0\" xmlns=\"http://www.w3.org/2000/svg\" width=\"30\" height=\"30\" viewBox=\"0 0 512.000000 512.000000\" preserveAspectRatio=\"xMidYMid meet\">\n        <g transform=\"translate(0.000000,512.000000) scale(0.100000,-0.100000)\" fill=\"#fff\" stroke=\"none\">\n          <path d=\"M1700 4394 c-621 -242 -842 -333 -863 -353 -44 -43 -51 -123 -51 -631 -1 -674 42 -1046 166 -1418 141 -426 475 -845 963 -1212 234 -176 580 -380 645 -380 37 0 192 79 365 187 611 381 1059 881 1236 1382 72 203 131 517 161 851 16 182 17 999 1 1114 -10 66 -16 84 -40 107 -21 20 -236 109 -853 349 -454 177 -841 324 -860 326 -28 4 -202 -61 -870 -322z m1530 -183 c355 -139 691 -270 747 -292 l102 -40 8 -47 c4 -26 8 -231 8 -457 -1 -443 -12 -619 -60 -903 -44 -259 -95 -434 -175 -599 -172 -355 -523 -724 -973 -1023 -118 -79 -310 -190 -327 -190 -32 0 -387 223 -528 332 -413 320 -694 662 -828 1009 -69 178 -128 470 -159 779 -28 283 -30 1068 -3 1096 15 14 1506 592 1523 590 11 -2 310 -117 665 -255z\"/>\n        </g>\n      </svg>\n      <span class=\"span\">Guardian</span>\n    </div>\n  </div>\n   \n  <div class=\"steps\">\n    <div class=\"step-class\"\n      *ngFor=\"let step of steps; let i = index\"\n      [class.active]=\"i === currentStep\"\n      (click)=\"goToStep(i)\"\n    >\n      Étape {{ step.step }}\n    </div>\n  </div>\n\n  <div class=\"step-content\">\n    <div *ngFor=\"let question of steps[currentStep]?.questions\">\n      <label class=\"label\" [for]=\"'question-' + question._id\">{{ question.text }}</label>\n  \n      <!-- Pour les champs de type 'text' -->\n      <input class=\"input-radio on\" \n        *ngIf=\"question.type === 'text'\"\n        [(ngModel)]=\"responses[question._id]\"\n        [id]=\"'question-' + question._id\"\n        type=\"text\"\n      />\n  \n      <!-- Pour les cases à cocher indépendantes (type 'boolean') -->\n      <div *ngIf=\"question.type === 'boolean'\">\n        <label class=\"checkbox-container\">\n          <input\n            type=\"checkbox\"\n            [(ngModel)]=\"responses[question._id + '-yes']\"\n            [id]=\"'question-' + question._id + '-yes'\"\n            [name]=\"'question-' + question._id + '-yes'\"\n          />\n          <span class=\"checkbox-label\">Oui</span>\n        </label>\n        <label class=\"checkbox-container\">\n          <input\n            type=\"checkbox\"\n            [(ngModel)]=\"responses[question._id + '-no']\"\n            [id]=\"'question-' + question._id + '-no'\"\n            [name]=\"'question-' + question._id + '-no'\"\n          />\n          <span class=\"checkbox-label\">Non</span>\n        </label>\n      </div>\n  \n      <!-- Pour les champs de type 'rating' -->\n      <input\n        *ngIf=\"question.type === 'rating'\"\n        [(ngModel)]=\"responses[question._id]\"\n        [id]=\"'question-' + question._id\"\n        type=\"number\"\n        min=\"1\"\n        max=\"5\"\n      />\n    </div>\n  </div>\n  \n\n  <div class=\"navigation\">\n    <button (click)=\"previousStep()\" [disabled]=\"currentStep === 0\">Précédent</button>\n    <button (click)=\"nextStep()\" [disabled]=\"currentStep === steps.length - 1\">Suivant</button>\n    <button *ngIf=\"currentStep === steps.length - 1\" (click)=\"submitWizard()\">Soumettre</button>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}