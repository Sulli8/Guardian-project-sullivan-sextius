{"ast":null,"code":"import _asyncToGenerator from \"/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../services/api.service\";\nimport * as i2 from \"@angular/common\";\nfunction ListDrugsComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵelement(2, \"img\", 3);\n    i0.ɵɵelementStart(3, \"div\")(4, \"div\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\");\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const medicament_r1 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(medicament_r1._id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(medicament_r1.description);\n  }\n}\nexport class ListDrugsComponent {\n  apiService;\n  medications = []; // Tableau pour stocker les médicaments\n  constructor(apiService) {\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.callCheckNotify();\n      // Répéter l'appel toutes les 10 secondes\n      setInterval(() => {\n        _this.callCheckNotify();\n      }, 10000);\n      _this.getMedications();\n    })();\n  }\n  callCheckNotify() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield _this2.apiService.checkNotify(); // Convertir l'Observable en Promise\n        console.log('Réponse de check-notify', response);\n      } catch (error) {\n        console.error('Erreur lors de l\\'appel à check-notify', error);\n      }\n    })();\n  }\n  getMedications() {\n    this.apiService.getMedications().subscribe(data => {\n      console.log('Médicaments récupérés :', data);\n      this.medications = data; // Affecter les médicaments récupérés\n    }, error => {\n      console.error('Erreur lors de la récupération des médicaments:', error);\n    });\n  }\n  static ɵfac = function ListDrugsComponent_Factory(t) {\n    return new (t || ListDrugsComponent)(i0.ɵɵdirectiveInject(i1.ApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListDrugsComponent,\n    selectors: [[\"app-list-drugs\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[\"class\", \"container-drugs\", 4, \"ngFor\", \"ngForOf\"], [1, \"container-drugs\"], [1, \"drugs\"], [\"s\", \"\"]],\n    template: function ListDrugsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-bar\");\n        i0.ɵɵtemplate(1, ListDrugsComponent_div_1_Template, 10, 3, \"div\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngForOf\", ctx.medications);\n      }\n    },\n    dependencies: [CommonModule, i2.NgForOf, NavBarComponent],\n    styles: [\"\\n\\napp-nav-bar[_ngcontent-%COMP%] {\\n    margin-bottom: 20px; \\n\\n  }\\n  \\n  .container-drugs[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n\\n  }\\n\\n  .drugs[_ngcontent-%COMP%] {\\n    background-color: #2C2C2E;\\n    height: 100px;\\n    width: 250px;\\n    border-radius: 10px;\\n    color: #fff;\\n  }\\n  \\n  \\n\\n  @media (max-width: 768px) {\\n    .table[_ngcontent-%COMP%]   thead[_ngcontent-%COMP%] {\\n      font-size: 14px;\\n    }\\n    .table[_ngcontent-%COMP%]   td[_ngcontent-%COMP%], .table[_ngcontent-%COMP%]   th[_ngcontent-%COMP%] {\\n      font-size: 12px;\\n      padding: 8px;\\n    }\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9saXN0LWRydWdzL2xpc3QtZHJ1Z3MuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSx5QkFBeUI7QUFDekI7SUFDSSxtQkFBbUIsRUFBRSx1Q0FBdUM7RUFDOUQ7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsOEJBQThCOztFQUVoQzs7RUFFQTtJQUNFLHlCQUF5QjtJQUN6QixhQUFhO0lBQ2IsWUFBWTtJQUNaLG1CQUFtQjtJQUNuQixXQUFXO0VBQ2I7O0VBRUEsNkNBQTZDO0VBQzdDO0lBQ0U7TUFDRSxlQUFlO0lBQ2pCO0lBQ0E7TUFDRSxlQUFlO01BQ2YsWUFBWTtJQUNkO0VBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBTdHlsZSBwb3VyIGxlIE5hdkJhciAqL1xuYXBwLW5hdi1iYXIge1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7IC8qIEVzcGFjZSBzb3VzIGxhIGJhcnJlIGRlIG5hdmlnYXRpb24gKi9cbiAgfVxuICBcbiAgLmNvbnRhaW5lci1kcnVncyB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG5cbiAgfVxuXG4gIC5kcnVncyB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzJDMkMyRTtcbiAgICBoZWlnaHQ6IDEwMHB4O1xuICAgIHdpZHRoOiAyNTBweDtcbiAgICBib3JkZXItcmFkaXVzOiAxMHB4O1xuICAgIGNvbG9yOiAjZmZmO1xuICB9XG4gIFxuICAvKiBTdHlsZSBkZSBsYSB0YWJsZSBwb3VyIGxlcyBwZXRpdHMgw4PCqWNyYW5zICovXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuICAgIC50YWJsZSB0aGVhZCB7XG4gICAgICBmb250LXNpemU6IDE0cHg7XG4gICAgfVxuICAgIC50YWJsZSB0ZCwgLnRhYmxlIHRoIHtcbiAgICAgIGZvbnQtc2l6ZTogMTJweDtcbiAgICAgIHBhZGRpbmc6IDhweDtcbiAgICB9XG4gIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","NavBarComponent","i0","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","medicament_r1","_id","name","description","ListDrugsComponent","apiService","medications","constructor","ngOnInit","_this","_asyncToGenerator","callCheckNotify","setInterval","getMedications","_this2","response","checkNotify","console","log","error","subscribe","data","ɵɵdirectiveInject","i1","ApiService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","ListDrugsComponent_Template","rf","ctx","ɵɵtemplate","ListDrugsComponent_div_1_Template","ɵɵproperty","i2","NgForOf","styles"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/list-drugs/list-drugs.component.ts","/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/list-drugs/list-drugs.component.html"],"sourcesContent":["import { Component, NgModule, OnInit } from '@angular/core';\nimport { ApiService } from '../../../services/api.service'; // Importez votre service\nimport { CommonModule } from '@angular/common';\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\n\n@Component({\n  selector: 'app-list-drugs',\n  templateUrl: './list-drugs.component.html',\n  styleUrls: ['./list-drugs.component.css'],\n  standalone:true,\n  imports:[CommonModule,NavBarComponent]\n})\nexport class ListDrugsComponent implements OnInit {\n\n  medications: any[] = []; // Tableau pour stocker les médicaments\n\n  constructor(private apiService: ApiService) {}\n\n  async ngOnInit() {\n    this.callCheckNotify();\n    // Répéter l'appel toutes les 10 secondes\n    setInterval(() => {\n      this.callCheckNotify();\n    }, 10000);\n    this.getMedications();\n  }\n  \n  async callCheckNotify() {\n    try {\n      const response = await this.apiService.checkNotify(); // Convertir l'Observable en Promise\n      console.log('Réponse de check-notify', response);\n    } catch (error) {\n      console.error('Erreur lors de l\\'appel à check-notify', error);\n    }\n  }\n\n  getMedications(): void {\n    this.apiService.getMedications().subscribe(\n      (data) => {\n        console.log('Médicaments récupérés :', data);\n        this.medications = data;  // Affecter les médicaments récupérés\n      },\n      (error) => {\n        console.error('Erreur lors de la récupération des médicaments:', error);\n      }\n    );\n  }\n}\n","<app-nav-bar></app-nav-bar>\n <div class=\"container-drugs\" *ngFor=\"let medicament of medications\">\n    <div class=\"drugs\">\n      <img s>\n    <div>\n        <div>{{ medicament._id }}</div>\n        <div>{{ medicament.name }}</div>\n        <div>{{ medicament.description }}</div>\n    </div>\n    </div>\n  </div>\n  "],"mappings":";AAEA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,eAAe,QAAQ,8BAA8B;;;;;;ICD1DC,EADH,CAAAC,cAAA,aAAoE,aAC9C;IACjBD,EAAA,CAAAE,SAAA,aAAO;IAELF,EADJ,CAAAC,cAAA,UAAK,UACI;IAAAD,EAAA,CAAAG,MAAA,GAAoB;IAAAH,EAAA,CAAAI,YAAA,EAAM;IAC/BJ,EAAA,CAAAC,cAAA,UAAK;IAAAD,EAAA,CAAAG,MAAA,GAAqB;IAAAH,EAAA,CAAAI,YAAA,EAAM;IAChCJ,EAAA,CAAAC,cAAA,UAAK;IAAAD,EAAA,CAAAG,MAAA,GAA4B;IAGvCH,EAHuC,CAAAI,YAAA,EAAM,EACrC,EACA,EACF;;;;IALKJ,EAAA,CAAAK,SAAA,GAAoB;IAApBL,EAAA,CAAAM,iBAAA,CAAAC,aAAA,CAAAC,GAAA,CAAoB;IACpBR,EAAA,CAAAK,SAAA,GAAqB;IAArBL,EAAA,CAAAM,iBAAA,CAAAC,aAAA,CAAAE,IAAA,CAAqB;IACrBT,EAAA,CAAAK,SAAA,GAA4B;IAA5BL,EAAA,CAAAM,iBAAA,CAAAC,aAAA,CAAAG,WAAA,CAA4B;;;ADKzC,OAAM,MAAOC,kBAAkB;EAITC,UAAA;EAFpBC,WAAW,GAAU,EAAE,CAAC,CAAC;EAEzBC,YAAoBF,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;EAAe;EAEvCG,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZD,KAAI,CAACE,eAAe,EAAE;MACtB;MACAC,WAAW,CAAC,MAAK;QACfH,KAAI,CAACE,eAAe,EAAE;MACxB,CAAC,EAAE,KAAK,CAAC;MACTF,KAAI,CAACI,cAAc,EAAE;IAAC;EACxB;EAEMF,eAAeA,CAAA;IAAA,IAAAG,MAAA;IAAA,OAAAJ,iBAAA;MACnB,IAAI;QACF,MAAMK,QAAQ,SAASD,MAAI,CAACT,UAAU,CAACW,WAAW,EAAE,CAAC,CAAC;QACtDC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEH,QAAQ,CAAC;OACjD,CAAC,OAAOI,KAAK,EAAE;QACdF,OAAO,CAACE,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;;IAC/D;EACH;EAEAN,cAAcA,CAAA;IACZ,IAAI,CAACR,UAAU,CAACQ,cAAc,EAAE,CAACO,SAAS,CACvCC,IAAI,IAAI;MACPJ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEG,IAAI,CAAC;MAC5C,IAAI,CAACf,WAAW,GAAGe,IAAI,CAAC,CAAE;IAC5B,CAAC,EACAF,KAAK,IAAI;MACRF,OAAO,CAACE,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;IACzE,CAAC,CACF;EACH;;qBAlCWf,kBAAkB,EAAAX,EAAA,CAAA6B,iBAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;;UAAlBpB,kBAAkB;IAAAqB,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAlC,EAAA,CAAAmC,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCZ/BzC,EAAA,CAAAE,SAAA,kBAA2B;QAC1BF,EAAA,CAAA2C,UAAA,IAAAC,iCAAA,kBAAoE;;;QAAhB5C,EAAA,CAAAK,SAAA,EAAc;QAAdL,EAAA,CAAA6C,UAAA,YAAAH,GAAA,CAAA7B,WAAA,CAAc;;;mBDSxDf,YAAY,EAAAgD,EAAA,CAAAC,OAAA,EAAChD,eAAe;IAAAiD,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}