{"ast":null,"code":"import _asyncToGenerator from \"/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport Swal from 'sweetalert2'; // Import SweetAlert2\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/service-worker\";\nimport * as i2 from \"../../../services/api.service\";\nimport * as i3 from \"@angular/common\";\nfunction NotificationsComponent_p_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"Merci d'autoriser les notifications dans votre navigateur\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotificationsComponent_button_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 15);\n    i0.ɵɵlistener(\"click\", function NotificationsComponent_button_9_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.unsubscribeFromPush());\n    });\n    i0.ɵɵtext(1, \" Se d\\u00E9sabonner des notifications \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction NotificationsComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"button\", 17);\n    i0.ɵɵtext(2, \"Exporter mes donn\\u00E9es\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 17);\n    i0.ɵɵtext(4, \"Supprimer mes donn\\u00E9es\");\n    i0.ɵɵelementEnd()();\n  }\n}\nexport class NotificationsComponent {\n  swPush;\n  api;\n  displayMessage = false;\n  NotifsAllowed = false;\n  sub;\n  relanceIntervalId = null;\n  PUBLIC_VAPID_KEY_OF_SERVER = 'BGPhLwNAwJZguAqSPCFEbfN_TkH7tTpe5AVTvrQxAfWEb8-alQBJtx9VLsL3i2T1sWWOKYRabRWq1mRMocUDt4c';\n  notification_data;\n  constructor(swPush, api) {\n    this.swPush = swPush;\n    this.api = api;\n  }\n  getNotifications() {\n    this.api.getNotifications().subscribe(res => {\n      console.log(res);\n    });\n  }\n  ngOnInit() {\n    // Vérification de l'état de la permission des notifications\n    if (Notification.permission === 'granted') {\n      console.log('Notification granted');\n      this.NotifsAllowed = true; // Si l'utilisateur a déjà autorisé, on active le bouton\n    } else if (Notification.permission === 'denied') {\n      this.displayMessage = true; // Si l'utilisateur a refusé, on affiche un message\n    } else {\n      // Si l'utilisateur n'a pas encore pris de décision, on demande la permission\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          this.NotifsAllowed = true; // Si l'utilisateur accepte, on active le bouton\n        } else {\n          this.displayMessage = true; // Sinon, on affiche un message\n        }\n      });\n    }\n    this.checkIsSubscribed(); // Vérifier si l'utilisateur est abonné dès que le composant est initialisé\n  }\n  /**\n   * Vérifie si l'utilisateur est abonné aux notifications\n   */\n  checkIsSubscribed() {\n    this.api.checkIsSubsribe().subscribe(response => {\n      // Vérification de l'état de l'abonnement\n      if (response.isSubscribed) {\n        this.NotifsAllowed = true; // L'utilisateur est abonné\n        this.showSuccessAlert('Vous êtes déjà abonné aux notifications.');\n      } else {\n        this.NotifsAllowed = false; // L'utilisateur n'est pas abonné\n        this.showInfoAlert('Vous n\\'êtes pas encore abonné aux notifications.');\n      }\n    }, error => {\n      this.NotifsAllowed = false;\n      this.showErrorAlert('Erreur lors de la vérification de l\\'abonnement.');\n    });\n  }\n  /**\n   * Désabonne l'utilisateur des notifications push\n   */\n  unsubscribeFromPush() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Attendre la réponse de l'API pour désabonner l'utilisateur\n        const response = yield _this.api.unsubscribeFromNotifications();\n        _this.showSuccessAlert('Vous avez été désabonné avec succès des notifications.');\n        _this.NotifsAllowed = false; // Mettre à jour l'état NotifsAllowed\n      } catch (error) {\n        // Gérer les erreurs si la requête échoue\n        _this.showErrorAlert('Erreur lors de la désinscription des notifications.');\n      }\n    })();\n  }\n  /**\n   * Souscrire l'utilisateur aux notifications push\n   */\n  subscribeToPush() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        // Attendre la réponse de l'API pour souscrire aux notifications\n        const response = yield _this2.api.subscribeToPush();\n        // Si la souscription réussit, afficher le message de succès\n        _this2.showSuccessAlert('Souscription aux notifications réussie.');\n        _this2.NotifsAllowed = true; // Mettre à jour l'état NotifsAllowed\n      } catch (error) {\n        // Gérer les erreurs si la requête échoue\n        _this2.showErrorAlert('Erreur lors de la souscription aux notifications.');\n      }\n    })();\n  }\n  /**\n   * Afficher une SweetAlert de succès\n   */\n  showSuccessAlert(message) {\n    Swal.fire({\n      icon: 'success',\n      title: 'Succès',\n      text: message\n    });\n  }\n  /**\n   * Afficher une SweetAlert d'information\n   */\n  showInfoAlert(message) {\n    Swal.fire({\n      icon: 'info',\n      title: 'Information',\n      text: message\n    });\n  }\n  /**\n   * Afficher une SweetAlert d'erreur\n   */\n  showErrorAlert(message) {\n    Swal.fire({\n      icon: 'error',\n      title: 'Erreur',\n      text: message\n    });\n  }\n  ngOnDestroy() {\n    if (this.relanceIntervalId) {\n      clearInterval(this.relanceIntervalId);\n    }\n  }\n  static ɵfac = function NotificationsComponent_Factory(t) {\n    return new (t || NotificationsComponent)(i0.ɵɵdirectiveInject(i1.SwPush), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: NotificationsComponent,\n    selectors: [[\"app-notifications\"]],\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 26,\n    vars: 4,\n    consts: [[1, \"notifications-container\"], [1, \"sidebar-notifications\"], [4, \"ngIf\"], [1, \"buttons-container\"], [1, \"button\", \"is-primary\", 3, \"click\", \"disabled\"], [\"class\", \"button is-danger\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"buttons-container-child\", 4, \"ngIf\"], [1, \"container-box\"], [1, \"profile\"], [\"src\", \"\", \"alt\", \"photo-profile\"], [1, \"data-profile\"], [1, \"container-list-notification\"], [1, \"list-notifications\"], [1, \"notifications-item\"], [1, \"btn-export-pdf\"], [1, \"button\", \"is-danger\", 3, \"click\"], [1, \"buttons-container-child\"], [1, \"button\", \"is-primary\"]],\n    template: function NotificationsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelement(0, \"app-nav-bar\");\n        i0.ɵɵelementStart(1, \"div\", 0)(2, \"div\", 1)(3, \"h1\");\n        i0.ɵɵtext(4, \"Vos notifications - Nb notifications\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(5, NotificationsComponent_p_5_Template, 2, 0, \"p\", 2);\n        i0.ɵɵelementStart(6, \"div\", 3)(7, \"button\", 4);\n        i0.ɵɵlistener(\"click\", function NotificationsComponent_Template_button_click_7_listener() {\n          return ctx.subscribeToPush();\n        });\n        i0.ɵɵtext(8, \" Souscrire aux notifications \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(9, NotificationsComponent_button_9_Template, 2, 0, \"button\", 5)(10, NotificationsComponent_div_10_Template, 5, 0, \"div\", 6);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(11, \"div\", 7)(12, \"div\", 8);\n        i0.ɵɵelement(13, \"img\", 9);\n        i0.ɵɵelementStart(14, \"div\", 10)(15, \"div\");\n        i0.ɵɵtext(16, \"Nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"div\");\n        i0.ɵɵtext(18, \"Pr\\u00E9nom\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\");\n        i0.ɵɵtext(20, \"Mail-user\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(21, \"div\", 11)(22, \"div\", 12);\n        i0.ɵɵelement(23, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 14);\n        i0.ɵɵtext(25, \"Export de donn\\u00E9es au format pdf\");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.displayMessage);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.NotifsAllowed);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.NotifsAllowed);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.NotifsAllowed);\n      }\n    },\n    dependencies: [CommonModule, i3.NgIf, NavBarComponent],\n    styles: [\"var[_ngcontent-%COMP%]   resource[_ngcontent-%COMP%];\\n\\n (()[_ngcontent-%COMP%]   =[_ngcontent-%COMP%] >  { // webpackBootstrap\\n\\n \\tvar __webpack_modules__ = ({\\n\\n\\n 761:\\n\\n\\n\\n\\n\\n (() => {\\n\\nthrow new Error(\\\"Module build failed (from ./node_modules/postcss-loader/dist/cjs.js):\\\\n\\\\nSyntaxError\\\\n\\\\n(15:5) /Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/notifications/notifications.component.css Unknown word\\\\n\\\\n \\\\u001b[90m 13 | \\\\u001b[39m    justify-content\\\\u001b[33m:\\\\u001b[39m center\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 14 | \\\\u001b[39m    fl\\\\n\\\\u001b[1m\\\\u001b[31m>\\\\u001b[39m\\\\u001b[22m\\\\u001b[90m 15 | \\\\u001b[39m    height\\\\u001b[33m:\\\\u001b[39m 90vh\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m    | \\\\u001b[39m    \\\\u001b[1m\\\\u001b[31m^\\\\u001b[39m\\\\u001b[22m\\\\n \\\\u001b[90m 16 | \\\\u001b[39m    background-color\\\\u001b[33m:\\\\u001b[39m \\\\u001b[35m#2C2C2E\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n \\\\u001b[90m 17 | \\\\u001b[39m    color\\\\u001b[33m:\\\\u001b[39m \\\\u001b[35m#fff\\\\u001b[39m\\\\u001b[33m;\\\\u001b[39m\\\\n\\\");\\n\\n\\n })\\n\\n\\n \\t});\\n\\n\\n\\n \\t\\n\\n \\t// startup\\n\\n \\t// Load entry module and return exports\\n\\n \\t// This entry module doesn't tell about it's top-level declarations so it can't be inlined\\n\\n \\tvar __webpack_exports__ = {};\\n\\n \\t__webpack_modules__[761]();\\n\\n \\tresource = __webpack_exports__;\\n\\n \\t\\n\\n })()\\n;\\n/*# sourceMappingURL=notifications.component.css.map*/\"]\n  });\n}","map":{"version":3,"names":["CommonModule","Swal","NavBarComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","NotificationsComponent_button_9_Template_button_click_0_listener","ɵɵrestoreView","_r1","ctx_r1","ɵɵnextContext","ɵɵresetView","unsubscribeFromPush","NotificationsComponent","swPush","api","displayMessage","NotifsAllowed","sub","relanceIntervalId","PUBLIC_VAPID_KEY_OF_SERVER","notification_data","constructor","getNotifications","subscribe","res","console","log","ngOnInit","Notification","permission","requestPermission","then","checkIsSubscribed","checkIsSubsribe","response","isSubscribed","showSuccessAlert","showInfoAlert","error","showErrorAlert","_this","_asyncToGenerator","unsubscribeFromNotifications","subscribeToPush","_this2","message","fire","icon","title","text","ngOnDestroy","clearInterval","ɵɵdirectiveInject","i1","SwPush","i2","ApiService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","NotificationsComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","NotificationsComponent_p_5_Template","NotificationsComponent_Template_button_click_7_listener","NotificationsComponent_button_9_Template","NotificationsComponent_div_10_Template","ɵɵadvance","ɵɵproperty","i3","NgIf","styles"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/notifications/notifications.component.ts","/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/notifications/notifications.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, OnDestroy, OnInit } from '@angular/core';\nimport { SwPush } from '@angular/service-worker';\nimport Swal from 'sweetalert2'; // Import SweetAlert2\nimport { ApiService } from '../../../services/api.service';\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\n\n@Component({\n  selector: 'app-notifications',\n  templateUrl: './notifications.component.html',\n  styleUrls: ['./notifications.component.css'],\n  imports: [CommonModule, NavBarComponent],\n  standalone: true\n})\nexport class NotificationsComponent implements OnInit, OnDestroy {\n  displayMessage = false;\n  NotifsAllowed = false;\n  sub: any;\n  private relanceIntervalId: any = null;\n  PUBLIC_VAPID_KEY_OF_SERVER = 'BGPhLwNAwJZguAqSPCFEbfN_TkH7tTpe5AVTvrQxAfWEb8-alQBJtx9VLsL3i2T1sWWOKYRabRWq1mRMocUDt4c';\n  notification_data: any;\n \n  constructor(readonly swPush: SwPush, private api: ApiService) {\n  \n  }\n  getNotifications(){\n    this.api.getNotifications().subscribe(res => {\n      console.log(res)\n  })\n}\n  ngOnInit(): void {\n    // Vérification de l'état de la permission des notifications\n    if (Notification.permission === 'granted') {\n      console.log('Notification granted');\n      this.NotifsAllowed = true; // Si l'utilisateur a déjà autorisé, on active le bouton\n    } else if (Notification.permission === 'denied') {\n      this.displayMessage = true; // Si l'utilisateur a refusé, on affiche un message\n    } else {\n      // Si l'utilisateur n'a pas encore pris de décision, on demande la permission\n      Notification.requestPermission().then(permission => {\n        if (permission === 'granted') {\n          this.NotifsAllowed = true; // Si l'utilisateur accepte, on active le bouton\n        } else {\n          this.displayMessage = true; // Sinon, on affiche un message\n        }\n      });\n    }\n    this.checkIsSubscribed();  // Vérifier si l'utilisateur est abonné dès que le composant est initialisé\n  }\n\n  /**\n   * Vérifie si l'utilisateur est abonné aux notifications\n   */\n  checkIsSubscribed(): void {\n    this.api.checkIsSubsribe().subscribe(\n      (response) => {\n        // Vérification de l'état de l'abonnement\n        if (response.isSubscribed) {\n          this.NotifsAllowed = true;  // L'utilisateur est abonné\n          this.showSuccessAlert('Vous êtes déjà abonné aux notifications.');\n        } else {\n          this.NotifsAllowed = false; // L'utilisateur n'est pas abonné\n          this.showInfoAlert('Vous n\\'êtes pas encore abonné aux notifications.');\n        }\n      },\n      (error) => {\n        this.NotifsAllowed = false;\n        this.showErrorAlert('Erreur lors de la vérification de l\\'abonnement.');\n      }\n    );\n  }\n\n  /**\n   * Désabonne l'utilisateur des notifications push\n   */\n  async unsubscribeFromPush(): Promise<void> {\n    try {\n      // Attendre la réponse de l'API pour désabonner l'utilisateur\n      const response = await this.api.unsubscribeFromNotifications();\n      this.showSuccessAlert('Vous avez été désabonné avec succès des notifications.');\n      this.NotifsAllowed = false;  // Mettre à jour l'état NotifsAllowed\n    } catch (error) {\n      // Gérer les erreurs si la requête échoue\n      this.showErrorAlert('Erreur lors de la désinscription des notifications.');\n    }\n  }\n\n  /**\n   * Souscrire l'utilisateur aux notifications push\n   */\n  async subscribeToPush(): Promise<void> {\n    try {\n      // Attendre la réponse de l'API pour souscrire aux notifications\n      const response = await this.api.subscribeToPush();\n\n      // Si la souscription réussit, afficher le message de succès\n      this.showSuccessAlert('Souscription aux notifications réussie.');\n      this.NotifsAllowed = true;  // Mettre à jour l'état NotifsAllowed\n    } catch (error) {\n      // Gérer les erreurs si la requête échoue\n      this.showErrorAlert('Erreur lors de la souscription aux notifications.');\n    }\n  }\n\n  /**\n   * Afficher une SweetAlert de succès\n   */\n  private showSuccessAlert(message: string): void {\n    Swal.fire({\n      icon: 'success',\n      title: 'Succès',\n      text: message,\n    });\n  }\n\n  /**\n   * Afficher une SweetAlert d'information\n   */\n  private showInfoAlert(message: string): void {\n    Swal.fire({\n      icon: 'info',\n      title: 'Information',\n      text: message,\n    });\n  }\n\n  /**\n   * Afficher une SweetAlert d'erreur\n   */\n  private showErrorAlert(message: string): void {\n    Swal.fire({\n      icon: 'error',\n      title: 'Erreur',\n      text: message,\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.relanceIntervalId) {\n      clearInterval(this.relanceIntervalId);\n    }\n  }\n}\n","<app-nav-bar></app-nav-bar>\n<div class=\"notifications-container\">\n  <div class=\"sidebar-notifications\">\n    <h1>Vos notifications - Nb notifications</h1>\n    <p *ngIf=\"displayMessage\">Merci d'autoriser les notifications dans votre navigateur</p>\n    <div class=\"buttons-container\">\n      <button [disabled]=\"NotifsAllowed\" (click)=\"subscribeToPush()\" class=\"button is-primary\">\n        Souscrire aux notifications\n      </button>\n      <!-- Si l'utilisateur est abonné, afficher le bouton de désabonnement -->\n      <button *ngIf=\"NotifsAllowed\" (click)=\"unsubscribeFromPush()\" class=\"button is-danger\">\n        Se désabonner des notifications\n      </button>\n\n      <div *ngIf=\"NotifsAllowed\" class=\"buttons-container-child\">\n        <button class=\"button is-primary\">Exporter mes données</button>\n        <button class=\"button is-primary\">Supprimer mes données</button>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"container-box\">\n    <div class=\"profile\">\n      <img src=\"\" alt=\"photo-profile\"/>\n      <div class=\"data-profile\">\n        <div>Nom</div>\n        <div>Prénom</div>\n        <div>Mail-user</div>\n      </div>\n    </div>\n    <div class=\"container-list-notification\">\n      <div class=\"list-notifications\">\n        <div class=\"notifications-item\"></div>\n      </div>\n      <button class=\"btn-export-pdf\">Export de données au format pdf</button>\n    </div>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}