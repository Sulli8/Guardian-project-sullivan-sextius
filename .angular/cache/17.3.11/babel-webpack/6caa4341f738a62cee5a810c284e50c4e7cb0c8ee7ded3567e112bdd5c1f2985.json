{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// Import PrimeNG Modules\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button'; // Si vous utilisez pButton\nimport { InputTextModule } from 'primeng/inputtext'; // Pour p-inputText\nimport { SpinnerModule } from 'primeng/spinner'; // Pour p-spinner\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/radiobutton\";\nimport * as i6 from \"primeng/button\";\nimport * as i7 from \"primeng/spinner\";\nfunction WizardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"click\", function WizardComponent_div_4_Template_div_click_0_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.goToStep(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r2 === ctx_r2.currentStep);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \\u00C9tape \", step_r4.step, \" \");\n  }\n}\nfunction WizardComponent_div_6_p_inputText_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-inputText\", 15);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_6_p_inputText_3_Template_p_inputText_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id], $event) || (ctx_r2.responses[question_r6._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id);\n  }\n}\nfunction WizardComponent_div_6_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16)(1, \"p-radioButton\", 17);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_6_div_4_Template_p_radioButton_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id], $event) || (ctx_r2.responses[question_r6._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(2, \"p-radioButton\", 18);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_6_div_4_Template_p_radioButton_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id], $event) || (ctx_r2.responses[question_r6._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id]);\n    i0.ɵɵproperty(\"value\", true);\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id]);\n    i0.ɵɵproperty(\"value\", false);\n  }\n}\nfunction WizardComponent_div_6_p_spinner_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-spinner\", 19);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_6_p_spinner_5_Template_p_spinner_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id], $event) || (ctx_r2.responses[question_r6._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id]);\n    i0.ɵɵproperty(\"min\", 1)(\"max\", 5)(\"id\", \"question-\" + question_r6._id);\n  }\n}\nfunction WizardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"label\", 11);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, WizardComponent_div_6_p_inputText_3_Template, 1, 2, \"p-inputText\", 12)(4, WizardComponent_div_6_div_4_Template, 3, 4, \"div\", 13)(5, WizardComponent_div_6_p_spinner_5_Template, 1, 4, \"p-spinner\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", \"question-\" + question_r6._id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", question_r6.text, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"text\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"boolean\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"rating\");\n  }\n}\nfunction WizardComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 20);\n    i0.ɵɵlistener(\"click\", function WizardComponent_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.submitWizard());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nexport class WizardComponent {\n  router;\n  apiService;\n  title = '';\n  onSubmit = new EventEmitter();\n  currentStep = 0;\n  responses = {};\n  steps;\n  constructor(router, apiService) {\n    this.router = router;\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    // Charger les questions depuis l'API\n    this.apiService.getQuestions().subscribe(questions => {\n      // Organiser les questions par étape\n      console.log(questions);\n      this.steps = this.organizeQuestionsByStep(questions);\n    });\n  }\n  organizeQuestionsByStep(questions) {\n    const steps = [];\n    questions.questions.forEach(question => {\n      // Chercher l'étape existante pour cette question\n      const step = steps.find(s => s.step === question.step);\n      // Si l'étape n'existe pas encore, on la crée\n      if (!step) {\n        steps.push({\n          step: question.step,\n          questions: [question]\n        });\n      } else {\n        // Si l'étape existe déjà, on ajoute la question\n        step.questions.push(question);\n      }\n    });\n    return steps;\n  }\n  goToStep(index) {\n    if (index >= 0 && index < this.steps.length) {\n      this.currentStep = index;\n    }\n  }\n  nextStep() {\n    if (this.currentStep < this.steps.length - 1) {\n      this.currentStep++;\n    }\n  }\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n  submitWizard() {\n    console.log('Réponses soumises:', this.responses);\n    // 1. Structurer les réponses, si nécessaire\n    const formattedResponses = this.formatResponses(this.responses);\n    // 2. Soumettre les réponses au backend via le service\n    this.apiService.submitResponses(formattedResponses).subscribe(response => {\n      console.log('Réponses envoyées avec succès', response);\n      // Vérifiez si la réponse du backend indique un succès\n      if (response.message === 'Réponses enregistrées avec succès') {\n        // Redirige l'utilisateur vers la page d'accueil\n        this.router.navigate(['/home-page']); // 'home-page' est l'URL vers la page d'accueil\n      }\n      this.onSubmit.emit({\n        success: true,\n        response\n      }); // Émet un événement si l'envoi réussit\n    }, error => {\n      console.error('Erreur lors de l\\'envoi des réponses', error);\n      this.onSubmit.emit({\n        success: false,\n        error\n      }); // Émet un événement en cas d'erreur\n    });\n  }\n  // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n  formatResponses(responses) {\n    // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n    return Object.keys(responses).map(key => ({\n      questionId: key,\n      response: responses[key]\n    }));\n  }\n  static ɵfac = function WizardComponent_Factory(t) {\n    return new (t || WizardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WizardComponent,\n    selectors: [[\"app-wizard\"]],\n    inputs: {\n      title: \"title\",\n      steps: \"steps\"\n    },\n    outputs: {\n      onSubmit: \"onSubmit\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 11,\n    vars: 6,\n    consts: [[1, \"wizard\"], [1, \"steps\"], [\"style\", \"cursor: pointer; margin: 10px 0; font-weight: bold;\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"step-content\"], [\"class\", \"question\", 4, \"ngFor\", \"ngForOf\"], [1, \"navigation\", 2, \"margin-top\", \"20px\"], [\"pButton\", \"\", \"label\", \"Pr\\u00E9c\\u00E9dent\", \"icon\", \"pi pi-arrow-left\", 3, \"click\", \"disabled\"], [\"pButton\", \"\", \"label\", \"Suivant\", \"icon\", \"pi pi-arrow-right\", 3, \"click\", \"disabled\"], [\"pButton\", \"\", \"label\", \"Soumettre\", \"icon\", \"pi pi-check\", 3, \"click\", 4, \"ngIf\"], [2, \"cursor\", \"pointer\", \"margin\", \"10px 0\", \"font-weight\", \"bold\", 3, \"click\"], [1, \"question\"], [2, \"display\", \"block\", \"margin-bottom\", \"5px\", 3, \"for\"], [\"style\", \"width: 100%; margin-bottom: 15px;\", 3, \"ngModel\", \"id\", \"ngModelChange\", 4, \"ngIf\"], [\"style\", \"margin-bottom: 15px;\", 4, \"ngIf\"], [\"style\", \"margin-bottom: 15px;\", 3, \"ngModel\", \"min\", \"max\", \"id\", \"ngModelChange\", 4, \"ngIf\"], [2, \"width\", \"100%\", \"margin-bottom\", \"15px\", 3, \"ngModelChange\", \"ngModel\", \"id\"], [2, \"margin-bottom\", \"15px\"], [\"name\", \"'question-' + question._id\", \"label\", \"Oui\", 3, \"ngModelChange\", \"ngModel\", \"value\"], [\"name\", \"'question-' + question._id\", \"label\", \"Non\", 3, \"ngModelChange\", \"ngModel\", \"value\"], [2, \"margin-bottom\", \"15px\", 3, \"ngModelChange\", \"ngModel\", \"min\", \"max\", \"id\"], [\"pButton\", \"\", \"label\", \"Soumettre\", \"icon\", \"pi pi-check\", 3, \"click\"]],\n    template: function WizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtemplate(4, WizardComponent_div_4_Template, 2, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, WizardComponent_div_6_Template, 6, 5, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function WizardComponent_Template_button_click_8_listener() {\n          return ctx.previousStep();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function WizardComponent_Template_button_click_9_listener() {\n          return ctx.nextStep();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, WizardComponent_button_10_Template, 1, 0, \"button\", 8);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.steps[ctx.currentStep] == null ? null : ctx.steps[ctx.currentStep].questions);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.currentStep === 0);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.currentStep === ctx.steps.length - 1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.currentStep === ctx.steps.length - 1);\n      }\n    },\n    dependencies: [FormsModule, i3.NgControlStatus, i3.NgModel, CommonModule, i4.NgForOf, i4.NgIf, RadioButtonModule, i5.RadioButton, ButtonModule, i6.ButtonDirective, InputTextModule, SpinnerModule, i7.Spinner],\n    styles: [\".wizard[_ngcontent-%COMP%] {\\n  width: 60%;\\n  margin: 0 auto;\\n  padding: 20px;\\n  border: 1px solid #ccc;\\n  border-radius: 8px;\\n}\\n\\n.steps[_ngcontent-%COMP%] {\\n  display: flex;\\n  justify-content: space-around;\\n  margin-bottom: 20px;\\n}\\n\\n.steps[_ngcontent-%COMP%]   .active[_ngcontent-%COMP%] {\\n  color: #007ad9;\\n  font-weight: bold;\\n  text-decoration: underline;\\n}\\n\\n.step-content[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\n.navigation[_ngcontent-%COMP%]   button[_ngcontent-%COMP%] {\\n  margin-right: 10px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy93aXphcmQvd2l6YXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxVQUFVO0VBQ1YsY0FBYztFQUNkLGFBQWE7RUFDYixzQkFBc0I7RUFDdEIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLDZCQUE2QjtFQUM3QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxjQUFjO0VBQ2QsaUJBQWlCO0VBQ2pCLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQiIsInNvdXJjZXNDb250ZW50IjpbIi53aXphcmQge1xuICB3aWR0aDogNjAlO1xuICBtYXJnaW46IDAgYXV0bztcbiAgcGFkZGluZzogMjBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2NjYztcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xufVxuXG4uc3RlcHMge1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLnN0ZXBzIC5hY3RpdmUge1xuICBjb2xvcjogIzAwN2FkOTtcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XG4gIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xufVxuXG4uc3RlcC1jb250ZW50IHtcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcbn1cblxuLm5hdmlnYXRpb24gYnV0dG9uIHtcbiAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","EventEmitter","FormsModule","RadioButtonModule","ButtonModule","InputTextModule","SpinnerModule","i0","ɵɵelementStart","ɵɵlistener","WizardComponent_div_4_Template_div_click_0_listener","i_r2","ɵɵrestoreView","_r1","index","ctx_r2","ɵɵnextContext","ɵɵresetView","goToStep","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","currentStep","ɵɵadvance","ɵɵtextInterpolate1","step_r4","step","ɵɵtwoWayListener","WizardComponent_div_6_p_inputText_3_Template_p_inputText_ngModelChange_0_listener","$event","_r5","question_r6","$implicit","ɵɵtwoWayBindingSet","responses","_id","ɵɵtwoWayProperty","ɵɵproperty","WizardComponent_div_6_div_4_Template_p_radioButton_ngModelChange_1_listener","_r7","WizardComponent_div_6_div_4_Template_p_radioButton_ngModelChange_2_listener","WizardComponent_div_6_p_spinner_5_Template_p_spinner_ngModelChange_0_listener","_r8","ɵɵtemplate","WizardComponent_div_6_p_inputText_3_Template","WizardComponent_div_6_div_4_Template","WizardComponent_div_6_p_spinner_5_Template","text","type","WizardComponent_button_10_Template_button_click_0_listener","_r9","submitWizard","WizardComponent","router","apiService","title","onSubmit","steps","constructor","ngOnInit","getQuestions","subscribe","questions","console","log","organizeQuestionsByStep","forEach","question","find","s","push","length","nextStep","previousStep","formattedResponses","formatResponses","submitResponses","response","message","navigate","emit","success","error","Object","keys","map","key","questionId","ɵɵdirectiveInject","i1","Router","i2","ApiService","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","WizardComponent_Template","rf","ctx","WizardComponent_div_4_Template","WizardComponent_div_6_Template","WizardComponent_Template_button_click_8_listener","WizardComponent_Template_button_click_9_listener","WizardComponent_button_10_Template","ɵɵtextInterpolate","i3","NgControlStatus","NgModel","i4","NgForOf","NgIf","i5","RadioButton","i6","ButtonDirective","i7","Spinner","styles"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/wizard/wizard.component.ts","/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/wizard/wizard.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/services/api.service';\n// Import PrimeNG Modules\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button'; // Si vous utilisez pButton\nimport { InputTextModule } from 'primeng/inputtext'; // Pour p-inputText\nimport { SpinnerModule } from 'primeng/spinner'; // Pour p-spinner\nimport { BrowserModule } from '@angular/platform-browser';\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.css'],\n  standalone:true,\n  imports:[FormsModule,CommonModule,\n    FormsModule,\n    RadioButtonModule,\n    ButtonModule,\n    InputTextModule,\n    SpinnerModule]\n})\nexport class WizardComponent {\n  @Input() title: string = ''; \n  @Output() onSubmit = new EventEmitter<any>(); \n\n  currentStep = 0;\n  responses: { [key: number]: any } = {};\n  @Input() steps: any[];\n  constructor(private router:Router, private apiService: ApiService) {}\n\n  ngOnInit() {\n   \n    // Charger les questions depuis l'API\n    this.apiService.getQuestions().subscribe((questions) => {\n      // Organiser les questions par étape\n      console.log(questions)\n      this.steps = this.organizeQuestionsByStep(questions);\n    });\n  }\n\n   organizeQuestionsByStep(questions) {\n    const steps = [];\n  \n    questions.questions.forEach((question) => {\n      // Chercher l'étape existante pour cette question\n      const step = steps.find((s) => s.step === question.step);\n      \n      // Si l'étape n'existe pas encore, on la crée\n      if (!step) {\n        steps.push({ step: question.step, questions: [question] });\n      } else {\n        // Si l'étape existe déjà, on ajoute la question\n        step.questions.push(question);\n      }\n    });\n  \n    return steps;\n  }\n  \n\n\n\n  goToStep(index: number) {\n    if (index >= 0 && index < this.steps.length) {\n      this.currentStep = index;\n    }\n  }\n\n  nextStep() {\n    if (this.currentStep < this.steps.length - 1) {\n      this.currentStep++;\n    }\n  }\n\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n\n\n  submitWizard() {\n    console.log('Réponses soumises:', this.responses);\n\n    // 1. Structurer les réponses, si nécessaire\n    const formattedResponses = this.formatResponses(this.responses);\n\n    // 2. Soumettre les réponses au backend via le service\n    this.apiService.submitResponses(formattedResponses).subscribe(\n      (response) => {\n        console.log('Réponses envoyées avec succès', response);\n        \n        // Vérifiez si la réponse du backend indique un succès\n        if (response.message === 'Réponses enregistrées avec succès') {\n          // Redirige l'utilisateur vers la page d'accueil\n          this.router.navigate(['/home-page']);  // 'home-page' est l'URL vers la page d'accueil\n        }\n\n        this.onSubmit.emit({ success: true, response });  // Émet un événement si l'envoi réussit\n      },\n      (error) => {\n        console.error('Erreur lors de l\\'envoi des réponses', error);\n        this.onSubmit.emit({ success: false, error });  // Émet un événement en cas d'erreur\n      }\n    );\n  }\n\n  // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n  formatResponses(responses: any) {\n    // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n    return Object.keys(responses).map((key) => ({\n      questionId: key,\n      response: responses[key]\n    }));\n  }\n}\n","<div class=\"wizard\">\n  <h2>{{ title }}</h2>\n\n  <div class=\"steps\">\n    <div\n      *ngFor=\"let step of steps; let i = index\"\n      [class.active]=\"i === currentStep\"\n      (click)=\"goToStep(i)\"\n      style=\"cursor: pointer; margin: 10px 0; font-weight: bold;\"\n    >\n      Étape {{ step.step }}\n    </div>\n  </div>\n\n  <div class=\"step-content\">\n    <div *ngFor=\"let question of steps[currentStep]?.questions\" class=\"question\">\n      <label [for]=\"'question-' + question._id\" style=\"display: block; margin-bottom: 5px;\">\n        {{ question.text }}\n      </label>\n\n      <!-- Champ texte -->\n      <p-inputText\n        *ngIf=\"question.type === 'text'\"\n        [(ngModel)]=\"responses[question._id]\"\n        [id]=\"'question-' + question._id\"\n        style=\"width: 100%; margin-bottom: 15px;\"\n      ></p-inputText>\n\n      <!-- Boutons radio pour 'boolean' -->\n      <div *ngIf=\"question.type === 'boolean'\" style=\"margin-bottom: 15px;\">\n        <p-radioButton\n          name=\"'question-' + question._id\"\n          [(ngModel)]=\"responses[question._id]\"\n          [value]=\"true\"\n          label=\"Oui\"\n        ></p-radioButton>\n        <p-radioButton\n          name=\"'question-' + question._id\"\n          [(ngModel)]=\"responses[question._id]\"\n          [value]=\"false\"\n          label=\"Non\"\n        ></p-radioButton>\n      </div>\n\n      <!-- Champ de notation (rating) -->\n      <p-spinner\n        *ngIf=\"question.type === 'rating'\"\n        [(ngModel)]=\"responses[question._id]\"\n        [min]=\"1\"\n        [max]=\"5\"\n        [id]=\"'question-' + question._id\"\n        style=\"margin-bottom: 15px;\"\n      ></p-spinner>\n    </div>\n  </div>\n\n  <div class=\"navigation\" style=\"margin-top: 20px;\">\n    <button\n      pButton\n      label=\"Précédent\"\n      icon=\"pi pi-arrow-left\"\n      (click)=\"previousStep()\"\n      [disabled]=\"currentStep === 0\"\n    ></button>\n    <button\n      pButton\n      label=\"Suivant\"\n      icon=\"pi pi-arrow-right\"\n      (click)=\"nextStep()\"\n      [disabled]=\"currentStep === steps.length - 1\"\n    ></button>\n    <button\n      *ngIf=\"currentStep === steps.length - 1\"\n      pButton\n      label=\"Soumettre\"\n      icon=\"pi pi-check\"\n      (click)=\"submitWizard()\"\n    ></button>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}