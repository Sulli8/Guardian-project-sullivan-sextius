{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nconst STEPS = [{\n  stepIndex: 1,\n  isComplete: false\n}, {\n  stepIndex: 2,\n  isComplete: false\n}, {\n  stepIndex: 3,\n  isComplete: false\n}];\nexport let StepsService = /*#__PURE__*/(() => {\n  class StepsService {\n    steps$ = new BehaviorSubject(STEPS);\n    currentStep$ = new BehaviorSubject(null);\n    constructor() {\n      this.currentStep$.next(this.steps$.value[0]);\n    }\n    setCurrentStep(step) {\n      this.currentStep$.next(step);\n    }\n    getCurrentStep() {\n      return this.currentStep$.asObservable();\n    }\n    getSteps() {\n      return this.steps$.asObservable();\n    }\n    moveToNextStep() {\n      const index = this.currentStep$.value.stepIndex;\n      if (index < this.steps$.value.length) {\n        this.currentStep$.next(this.steps$.value[index]);\n      }\n    }\n    isLastStep() {\n      return this.currentStep$.value.stepIndex === this.steps$.value.length;\n    }\n    static ɵfac = function StepsService_Factory(t) {\n      return new (t || StepsService)();\n    };\n    static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: StepsService,\n      factory: StepsService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return StepsService;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}