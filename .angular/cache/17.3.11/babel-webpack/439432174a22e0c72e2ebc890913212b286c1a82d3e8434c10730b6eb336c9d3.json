{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// Import PrimeNG Modules\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button'; // Si vous utilisez pButton\nimport { InputTextModule } from 'primeng/inputtext'; // Pour p-inputText\nimport { SpinnerModule } from 'primeng/spinner'; // Pour p-spinner\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"primeng/button\";\nimport * as i6 from \"primeng/inputtext\";\nfunction WizardComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵlistener(\"click\", function WizardComponent_div_4_Template_div_click_0_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.goToStep(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r2 === ctx_r2.currentStep);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \\u00C9tape \", i_r2 + 1, \" \");\n  }\n}\nfunction WizardComponent_div_6_div_1_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 17);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_6_div_1_input_3_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const question_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r5._id], $event) || (ctx_r2.responses[question_r5._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r5._id]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r5._id);\n  }\n}\nfunction WizardComponent_div_6_div_1_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 18)(1, \"p-toggleButton\", 19);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_6_div_1_div_4_Template_p_toggleButton_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const question_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r5._id], $event) || (ctx_r2.responses[question_r5._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const question_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r5._id]);\n    i0.ɵɵproperty(\"onLabel\", \"Oui\")(\"offLabel\", \"Non\")(\"onIcon\", \"pi pi-check\")(\"offIcon\", \"pi pi-times\");\n  }\n}\nfunction WizardComponent_div_6_div_1_p_inputNumber_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-inputNumber\", 20);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_6_div_1_p_inputNumber_5_Template_p_inputNumber_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const question_r5 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r5._id], $event) || (ctx_r2.responses[question_r5._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r5 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r5._id]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r5._id)(\"min\", 1)(\"max\", 5)(\"showButtons\", true)(\"mode\", \"decimal\");\n  }\n}\nfunction WizardComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"label\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, WizardComponent_div_6_div_1_input_3_Template, 1, 2, \"input\", 14)(4, WizardComponent_div_6_div_1_div_4_Template, 2, 5, \"div\", 15)(5, WizardComponent_div_6_div_1_p_inputNumber_5_Template, 1, 6, \"p-inputNumber\", 16);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r5 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", \"question-\" + question_r5._id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", question_r5.text, \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r5.type === \"text\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r5.type === \"boolean\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r5.type === \"rating\");\n  }\n}\nfunction WizardComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, WizardComponent_div_6_div_1_Template, 6, 5, \"div\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.steps[ctx_r2.currentStep] == null ? null : ctx_r2.steps[ctx_r2.currentStep].questions);\n  }\n}\nfunction WizardComponent_button_10_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 21);\n    i0.ɵɵlistener(\"click\", function WizardComponent_button_10_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.submitWizard());\n    });\n    i0.ɵɵelementEnd();\n  }\n}\nexport class WizardComponent {\n  router;\n  apiService;\n  title = '';\n  onSubmit = new EventEmitter();\n  currentStep = 0;\n  responses = {};\n  steps;\n  constructor(router, apiService) {\n    this.router = router;\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    // Charger les questions depuis l'API\n    this.apiService.getQuestions().subscribe(questions => {\n      // Organiser les questions par étape\n      console.log(questions);\n      this.steps = this.organizeQuestionsByStep(questions);\n    });\n  }\n  organizeQuestionsByStep(questions) {\n    const steps = [];\n    questions.questions.forEach(question => {\n      // Chercher l'étape existante pour cette question\n      const step = steps.find(s => s.step === question.step);\n      // Si l'étape n'existe pas encore, on la crée\n      if (!step) {\n        steps.push({\n          step: question.step,\n          questions: [question]\n        });\n      } else {\n        // Si l'étape existe déjà, on ajoute la question\n        step.questions.push(question);\n      }\n    });\n    return steps;\n  }\n  goToStep(index) {\n    if (index >= 0 && index < this.steps.length) {\n      this.currentStep = index;\n    }\n  }\n  nextStep() {\n    if (this.currentStep < this.steps.length - 1) {\n      this.currentStep++;\n    }\n  }\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n  submitWizard() {\n    console.log('Réponses soumises:', this.responses);\n    // 1. Structurer les réponses, si nécessaire\n    const formattedResponses = this.formatResponses(this.responses);\n    // 2. Soumettre les réponses au backend via le service\n    this.apiService.submitResponses(formattedResponses).subscribe(response => {\n      console.log('Réponses envoyées avec succès', response);\n      // Vérifiez si la réponse du backend indique un succès\n      if (response.message === 'Réponses enregistrées avec succès') {\n        // Redirige l'utilisateur vers la page d'accueil\n        this.router.navigate(['/home-page']); // 'home-page' est l'URL vers la page d'accueil\n      }\n      this.onSubmit.emit({\n        success: true,\n        response\n      }); // Émet un événement si l'envoi réussit\n    }, error => {\n      console.error('Erreur lors de l\\'envoi des réponses', error);\n      this.onSubmit.emit({\n        success: false,\n        error\n      }); // Émet un événement en cas d'erreur\n    });\n  }\n  // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n  formatResponses(responses) {\n    // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n    return Object.keys(responses).map(key => ({\n      questionId: key,\n      response: responses[key]\n    }));\n  }\n  static ɵfac = function WizardComponent_Factory(t) {\n    return new (t || WizardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WizardComponent,\n    selectors: [[\"app-wizard\"]],\n    inputs: {\n      title: \"title\",\n      steps: \"steps\"\n    },\n    outputs: {\n      onSubmit: \"onSubmit\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 11,\n    vars: 6,\n    consts: [[1, \"wizard\"], [1, \"steps\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"step-container\"], [\"class\", \"step-content\", 4, \"ngIf\"], [1, \"navigation\"], [\"pButton\", \"\", \"label\", \"Pr\\u00E9c\\u00E9dent\", \"icon\", \"pi pi-arrow-left\", 1, \"nav-button\", 3, \"click\", \"disabled\"], [\"pButton\", \"\", \"label\", \"Suivant\", \"icon\", \"pi pi-arrow-right\", \"iconPos\", \"right\", 1, \"nav-button\", 3, \"click\", \"disabled\"], [\"pButton\", \"\", \"label\", \"Soumettre\", \"icon\", \"pi pi-check\", \"class\", \"submit-button\", 3, \"click\", 4, \"ngIf\"], [3, \"click\"], [1, \"step-content\"], [\"class\", \"question-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"question-card\"], [1, \"question-label\", 3, \"for\"], [\"type\", \"text\", \"pInputText\", \"\", \"class\", \"text-input\", 3, \"ngModel\", \"id\", \"ngModelChange\", 4, \"ngIf\"], [\"class\", \"toggle-container\", 4, \"ngIf\"], [\"class\", \"rating-input\", 3, \"ngModel\", \"id\", \"min\", \"max\", \"showButtons\", \"mode\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"text\", \"pInputText\", \"\", 1, \"text-input\", 3, \"ngModelChange\", \"ngModel\", \"id\"], [1, \"toggle-container\"], [1, \"boolean-toggle\", 3, \"ngModelChange\", \"ngModel\", \"onLabel\", \"offLabel\", \"onIcon\", \"offIcon\"], [1, \"rating-input\", 3, \"ngModelChange\", \"ngModel\", \"id\", \"min\", \"max\", \"showButtons\", \"mode\"], [\"pButton\", \"\", \"label\", \"Soumettre\", \"icon\", \"pi pi-check\", 1, \"submit-button\", 3, \"click\"]],\n    template: function WizardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtemplate(4, WizardComponent_div_4_Template, 2, 3, \"div\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtemplate(6, WizardComponent_div_6_Template, 2, 1, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5)(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function WizardComponent_Template_button_click_8_listener() {\n          return ctx.previousStep();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵlistener(\"click\", function WizardComponent_Template_button_click_9_listener() {\n          return ctx.nextStep();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(10, WizardComponent_button_10_Template, 1, 0, \"button\", 8);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.steps);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.steps[ctx.currentStep]);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", ctx.currentStep === 0);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.currentStep === ctx.steps.length - 1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.currentStep === ctx.steps.length - 1);\n      }\n    },\n    dependencies: [FormsModule, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgModel, CommonModule, i4.NgForOf, i4.NgIf, RadioButtonModule, ButtonModule, i5.ButtonDirective, InputTextModule, i6.InputText, SpinnerModule],\n    styles: [\"\\n\\n.custom-toggle[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 15px;\\n}\\n\\n\\n\\n.switch[_ngcontent-%COMP%] {\\n  position: relative;\\n  display: inline-block;\\n  width: 50px;\\n  height: 25px;\\n}\\n\\n.switch[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  opacity: 0;\\n  width: 0;\\n  height: 0;\\n}\\n\\n\\n\\n.slider[_ngcontent-%COMP%] {\\n  position: absolute;\\n  cursor: pointer;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n  bottom: 0;\\n  background-color: #ccc;\\n  transition: 0.4s;\\n  border-radius: 25px;\\n}\\n\\n.slider[_ngcontent-%COMP%]:before {\\n  position: absolute;\\n  content: '';\\n  height: 20px;\\n  width: 20px;\\n  left: 5px;\\n  bottom: 2.5px;\\n  background-color: white;\\n  transition: 0.4s;\\n  border-radius: 50%;\\n}\\n\\ninput[_ngcontent-%COMP%]:checked    + .slider[_ngcontent-%COMP%] {\\n  background-color: #2196f3;\\n}\\n\\ninput[_ngcontent-%COMP%]:checked    + .slider[_ngcontent-%COMP%]:before {\\n  transform: translateX(24px);\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy93aXphcmQvd2l6YXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkJBQTZCO0FBQzdCO0VBQ0UsYUFBYTtFQUNiLG1CQUFtQjtFQUNuQixtQkFBbUI7QUFDckI7O0FBRUEsb0JBQW9CO0FBQ3BCO0VBQ0Usa0JBQWtCO0VBQ2xCLHFCQUFxQjtFQUNyQixXQUFXO0VBQ1gsWUFBWTtBQUNkOztBQUVBO0VBQ0UsVUFBVTtFQUNWLFFBQVE7RUFDUixTQUFTO0FBQ1g7O0FBRUEsV0FBVztBQUNYO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixNQUFNO0VBQ04sT0FBTztFQUNQLFFBQVE7RUFDUixTQUFTO0VBQ1Qsc0JBQXNCO0VBQ3RCLGdCQUFnQjtFQUNoQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsV0FBVztFQUNYLFlBQVk7RUFDWixXQUFXO0VBQ1gsU0FBUztFQUNULGFBQWE7RUFDYix1QkFBdUI7RUFDdkIsZ0JBQWdCO0VBQ2hCLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLDJCQUEyQjtBQUM3QiIsInNvdXJjZXNDb250ZW50IjpbIi8qIENvbnRhaW5lciBwb3VyIGxlIHRvZ2dsZSAqL1xuLmN1c3RvbS10b2dnbGUge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBtYXJnaW4tYm90dG9tOiAxNXB4O1xufVxuXG4vKiBTdHlsZSBkdSB0b2dnbGUgKi9cbi5zd2l0Y2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgd2lkdGg6IDUwcHg7XG4gIGhlaWdodDogMjVweDtcbn1cblxuLnN3aXRjaCBpbnB1dCB7XG4gIG9wYWNpdHk6IDA7XG4gIHdpZHRoOiAwO1xuICBoZWlnaHQ6IDA7XG59XG5cbi8qIFNsaWRlciAqL1xuLnNsaWRlciB7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIHJpZ2h0OiAwO1xuICBib3R0b206IDA7XG4gIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XG4gIHRyYW5zaXRpb246IDAuNHM7XG4gIGJvcmRlci1yYWRpdXM6IDI1cHg7XG59XG5cbi5zbGlkZXI6YmVmb3JlIHtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBjb250ZW50OiAnJztcbiAgaGVpZ2h0OiAyMHB4O1xuICB3aWR0aDogMjBweDtcbiAgbGVmdDogNXB4O1xuICBib3R0b206IDIuNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcbiAgdHJhbnNpdGlvbjogMC40cztcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xufVxuXG5pbnB1dDpjaGVja2VkICsgLnNsaWRlciB7XG4gIGJhY2tncm91bmQtY29sb3I6ICMyMTk2ZjM7XG59XG5cbmlucHV0OmNoZWNrZWQgKyAuc2xpZGVyOmJlZm9yZSB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgyNHB4KTtcbn1cbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","EventEmitter","FormsModule","RadioButtonModule","ButtonModule","InputTextModule","SpinnerModule","i0","ɵɵelementStart","ɵɵlistener","WizardComponent_div_4_Template_div_click_0_listener","i_r2","ɵɵrestoreView","_r1","index","ctx_r2","ɵɵnextContext","ɵɵresetView","goToStep","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","currentStep","ɵɵadvance","ɵɵtextInterpolate1","ɵɵtwoWayListener","WizardComponent_div_6_div_1_input_3_Template_input_ngModelChange_0_listener","$event","_r4","question_r5","$implicit","ɵɵtwoWayBindingSet","responses","_id","ɵɵtwoWayProperty","ɵɵproperty","WizardComponent_div_6_div_1_div_4_Template_p_toggleButton_ngModelChange_1_listener","_r6","WizardComponent_div_6_div_1_p_inputNumber_5_Template_p_inputNumber_ngModelChange_0_listener","_r7","ɵɵtemplate","WizardComponent_div_6_div_1_input_3_Template","WizardComponent_div_6_div_1_div_4_Template","WizardComponent_div_6_div_1_p_inputNumber_5_Template","text","type","WizardComponent_div_6_div_1_Template","steps","questions","WizardComponent_button_10_Template_button_click_0_listener","_r8","submitWizard","WizardComponent","router","apiService","title","onSubmit","constructor","ngOnInit","getQuestions","subscribe","console","log","organizeQuestionsByStep","forEach","question","step","find","s","push","length","nextStep","previousStep","formattedResponses","formatResponses","submitResponses","response","message","navigate","emit","success","error","Object","keys","map","key","questionId","ɵɵdirectiveInject","i1","Router","i2","ApiService","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","WizardComponent_Template","rf","ctx","WizardComponent_div_4_Template","WizardComponent_div_6_Template","WizardComponent_Template_button_click_8_listener","WizardComponent_Template_button_click_9_listener","WizardComponent_button_10_Template","ɵɵtextInterpolate","i3","DefaultValueAccessor","NgControlStatus","NgModel","i4","NgForOf","NgIf","i5","ButtonDirective","i6","InputText","styles"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/wizard/wizard.component.ts","/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/wizard/wizard.component.html"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/services/api.service';\n// Import PrimeNG Modules\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button'; // Si vous utilisez pButton\nimport { InputTextModule } from 'primeng/inputtext'; // Pour p-inputText\nimport { SpinnerModule } from 'primeng/spinner'; // Pour p-spinner\nimport { BrowserModule } from '@angular/platform-browser';\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.css'],\n  standalone:true,\n  imports:[FormsModule,CommonModule,\n    FormsModule,\n    RadioButtonModule,\n    ButtonModule,\n    InputTextModule,\n    SpinnerModule]\n})\nexport class WizardComponent {\n  @Input() title: string = ''; \n  @Output() onSubmit = new EventEmitter<any>(); \n\n  currentStep = 0;\n  responses: { [key: number]: any } = {};\n  @Input() steps: any[];\n  constructor(private router:Router, private apiService: ApiService) {}\n\n  ngOnInit() {\n   \n    // Charger les questions depuis l'API\n    this.apiService.getQuestions().subscribe((questions) => {\n      // Organiser les questions par étape\n      console.log(questions)\n      this.steps = this.organizeQuestionsByStep(questions);\n    });\n  }\n\n   organizeQuestionsByStep(questions) {\n    const steps = [];\n  \n    questions.questions.forEach((question) => {\n      // Chercher l'étape existante pour cette question\n      const step = steps.find((s) => s.step === question.step);\n      \n      // Si l'étape n'existe pas encore, on la crée\n      if (!step) {\n        steps.push({ step: question.step, questions: [question] });\n      } else {\n        // Si l'étape existe déjà, on ajoute la question\n        step.questions.push(question);\n      }\n    });\n  \n    return steps;\n  }\n  \n\n\n\n  goToStep(index: number) {\n    if (index >= 0 && index < this.steps.length) {\n      this.currentStep = index;\n    }\n  }\n\n  nextStep() {\n    if (this.currentStep < this.steps.length - 1) {\n      this.currentStep++;\n    }\n  }\n\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n\n\n  submitWizard() {\n    console.log('Réponses soumises:', this.responses);\n\n    // 1. Structurer les réponses, si nécessaire\n    const formattedResponses = this.formatResponses(this.responses);\n\n    // 2. Soumettre les réponses au backend via le service\n    this.apiService.submitResponses(formattedResponses).subscribe(\n      (response) => {\n        console.log('Réponses envoyées avec succès', response);\n        \n        // Vérifiez si la réponse du backend indique un succès\n        if (response.message === 'Réponses enregistrées avec succès') {\n          // Redirige l'utilisateur vers la page d'accueil\n          this.router.navigate(['/home-page']);  // 'home-page' est l'URL vers la page d'accueil\n        }\n\n        this.onSubmit.emit({ success: true, response });  // Émet un événement si l'envoi réussit\n      },\n      (error) => {\n        console.error('Erreur lors de l\\'envoi des réponses', error);\n        this.onSubmit.emit({ success: false, error });  // Émet un événement en cas d'erreur\n      }\n    );\n  }\n\n  // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n  formatResponses(responses: any) {\n    // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n    return Object.keys(responses).map((key) => ({\n      questionId: key,\n      response: responses[key]\n    }));\n  }\n}\n","<div class=\"wizard\">\n  <h2>{{ title }}</h2>\n\n  <!-- Indicateur d'étapes -->\n  <div class=\"steps\">\n    <div\n      *ngFor=\"let step of steps; let i = index\"\n      [class.active]=\"i === currentStep\"\n      (click)=\"goToStep(i)\"\n    >\n      Étape {{ i + 1 }}\n    </div>\n  </div>\n\n  <!-- Contenu de l'étape -->\n  <div class=\"step-container\">\n    <div class=\"step-content\" *ngIf=\"steps[currentStep]\">\n      <div class=\"question-card\" *ngFor=\"let question of steps[currentStep]?.questions\">\n        <label [for]=\"'question-' + question._id\" class=\"question-label\">\n          {{ question.text }}\n        </label>\n\n        <!-- Champ de texte -->\n        <input\n          *ngIf=\"question.type === 'text'\"\n          [(ngModel)]=\"responses[question._id]\"\n          [id]=\"'question-' + question._id\"\n          type=\"text\"\n          pInputText\n          class=\"text-input\"\n        />\n\n        <!-- Toggle pour boolean -->\n        <div *ngIf=\"question.type === 'boolean'\" class=\"toggle-container\">\n          <p-toggleButton\n            [(ngModel)]=\"responses[question._id]\"\n            [onLabel]=\"'Oui'\"\n            [offLabel]=\"'Non'\"\n            [onIcon]=\"'pi pi-check'\"\n            [offIcon]=\"'pi pi-times'\"\n            class=\"boolean-toggle\"\n          ></p-toggleButton>\n        </div>\n\n        <!-- Évaluation (rating) -->\n        <p-inputNumber\n          *ngIf=\"question.type === 'rating'\"\n          [(ngModel)]=\"responses[question._id]\"\n          [id]=\"'question-' + question._id\"\n          [min]=\"1\"\n          [max]=\"5\"\n          [showButtons]=\"true\"\n          [mode]=\"'decimal'\"\n          class=\"rating-input\"\n        ></p-inputNumber>\n      </div>\n    </div>\n  </div>\n\n  <!-- Navigation -->\n  <div class=\"navigation\">\n    <button pButton label=\"Précédent\" icon=\"pi pi-arrow-left\" (click)=\"previousStep()\" [disabled]=\"currentStep === 0\" class=\"nav-button\"></button>\n    <button pButton label=\"Suivant\" icon=\"pi pi-arrow-right\" iconPos=\"right\" (click)=\"nextStep()\" [disabled]=\"currentStep === steps.length - 1\" class=\"nav-button\"></button>\n    <button *ngIf=\"currentStep === steps.length - 1\" pButton label=\"Soumettre\" icon=\"pi pi-check\" (click)=\"submitWizard()\" class=\"submit-button\"></button>\n  </div>\n</div>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}