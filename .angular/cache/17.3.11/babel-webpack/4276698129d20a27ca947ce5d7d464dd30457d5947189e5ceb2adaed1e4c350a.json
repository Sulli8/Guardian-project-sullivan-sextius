{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n// Import PrimeNG Modules\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button'; // Si vous utilisez pButton\nimport { InputTextModule } from 'primeng/inputtext'; // Pour p-inputText\nimport { SpinnerModule } from 'primeng/spinner'; // Pour p-spinner\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/api.service\";\nexport class WizardComponent {\n  router;\n  apiService;\n  title = '';\n  onSubmit = new EventEmitter();\n  currentStep = 0;\n  responses = {};\n  steps;\n  constructor(router, apiService) {\n    this.router = router;\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    // Charger les questions depuis l'API\n    this.apiService.getQuestions().subscribe(questions => {\n      // Organiser les questions par étape\n      console.log(questions);\n      this.steps = this.organizeQuestionsByStep(questions);\n    });\n  }\n  organizeQuestionsByStep(questions) {\n    const steps = [];\n    questions.questions.forEach(question => {\n      // Chercher l'étape existante pour cette question\n      const step = steps.find(s => s.step === question.step);\n      // Si l'étape n'existe pas encore, on la crée\n      if (!step) {\n        steps.push({\n          step: question.step,\n          questions: [question]\n        });\n      } else {\n        // Si l'étape existe déjà, on ajoute la question\n        step.questions.push(question);\n      }\n    });\n    return steps;\n  }\n  goToStep(index) {\n    if (index >= 0 && index < this.steps.length) {\n      this.currentStep = index;\n    }\n  }\n  nextStep() {\n    if (this.currentStep < this.steps.length - 1) {\n      this.currentStep++;\n    }\n  }\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n  submitWizard($event) {\n    // Afficher la fenêtre de confirmation avec SweetAlert2\n    Swal.fire({\n      title: 'Êtes-vous sûr de vouloir soumettre le questionnaire?',\n      text: 'Vous ne pourrez pas modifier vos réponses une fois soumises.',\n      icon: 'warning',\n      showCancelButton: true,\n      confirmButtonText: 'Oui, soumettre',\n      cancelButtonText: 'Non, annuler',\n      reverseButtons: true // Inverse l'ordre des boutons (Annuler à gauche, Soumettre à droite)\n    }).then(result => {\n      if (result.isConfirmed) {\n        // Si l'utilisateur confirme, on peut envoyer les réponses\n        this.handleSubmit($event);\n        Swal.fire('Soumis!', 'Vos réponses ont été envoyées avec succès.', 'success');\n        // Appelez la logique de soumission ici, par exemple envoyer les réponses à votre serveur.\n        // this.apiService.submitResponses(responses);\n      } else {\n        // Si l'utilisateur annule, vous pouvez afficher un message d'annulation\n        Swal.fire('Annulé', 'La soumission du questionnaire a été annulée.', 'info');\n      }\n    });\n  }\n  handleSubmit(event) {\n    console.log('Réponses soumises:', this.responses);\n    // 1. Structurer les réponses, si nécessaire\n    const formattedResponses = this.formatResponses(this.responses);\n    // 2. Soumettre les réponses au backend via le service\n    this.apiService.submitResponses(formattedResponses).subscribe(response => {\n      console.log('Réponses envoyées avec succès', response);\n      // Vérifiez si la réponse du backend indique un succès\n      if (response.message === 'Réponses enregistrées avec succès') {\n        // Redirige l'utilisateur vers la page d'accueil\n        this.router.navigate(['/home-page']); // 'home-page' est l'URL vers la page d'accueil\n      }\n      this.onSubmit.emit({\n        success: true,\n        response\n      }); // Émet un événement si l'envoi réussit\n    }, error => {\n      console.error('Erreur lors de l\\'envoi des réponses', error);\n      this.onSubmit.emit({\n        success: false,\n        error\n      }); // Émet un événement en cas d'erreur\n    });\n  }\n  // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n  formatResponses(responses) {\n    // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n    return Object.keys(responses).map(key => ({\n      questionId: key,\n      response: responses[key]\n    }));\n  }\n  static ɵfac = function WizardComponent_Factory(t) {\n    return new (t || WizardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WizardComponent,\n    selectors: [[\"app-wizard\"]],\n    inputs: {\n      title: \"title\",\n      steps: \"steps\"\n    },\n    outputs: {\n      onSubmit: \"onSubmit\"\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    decls: 0,\n    vars: 0,\n    template: function WizardComponent_Template(rf, ctx) {},\n    dependencies: [FormsModule, CommonModule, RadioButtonModule, ButtonModule, InputTextModule, SpinnerModule],\n    styles: [\".wizard[_ngcontent-%COMP%] {\\n    max-width: 600px;\\n    margin: 0 auto;\\n    font-family: Arial, sans-serif;\\n  }\\n  \\n  .steps[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: space-between;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .steps[_ngcontent-%COMP%]   div[_ngcontent-%COMP%] {\\n    flex: 1;\\n    text-align: center;\\n    padding: 10px;\\n    cursor: pointer;\\n    border-bottom: 2px solid #ccc;\\n  }\\n  \\n  .steps[_ngcontent-%COMP%]   div.active[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n    border-bottom: 2px solid #007bff;\\n  }\\n  \\n  .step-content[_ngcontent-%COMP%] {\\n    padding: 20px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .navigation[_ngcontent-%COMP%] {\\n    text-align: right;\\n  }\\n  \\n  button[_ngcontent-%COMP%] {\\n    margin-left: 10px;\\n    padding: 5px 15px;\\n    background-color: #007bff;\\n    color: white;\\n    border: none;\\n    border-radius: 3px;\\n    cursor: pointer;\\n  }\\n\\n  input[type=\\\"text\\\"][_ngcontent-%COMP%] {\\n    padding: 10px;\\n    border: none;\\n      border-bottom-width: medium;\\n      border-bottom-style: none;\\n      border-bottom-color: currentcolor;\\n      background: none;\\n      border-bottom: 1px solid aliceblue;\\n      cursor:pointer ;\\n      color: #fff;\\n  }\\n\\n  input[type=\\\"number\\\"][_ngcontent-%COMP%] {\\n    padding: 10px;\\n    border: none;\\n    border-bottom-width: medium;\\n    border-bottom-style: none;\\n    border-bottom-color: currentcolor;\\n    background: none;\\n    border: 1px solid aliceblue;\\n    cursor:pointer ;\\n    color: #fff;\\n    margin-left: 10px;\\n  }\\n  \\n  .title-questionnary[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    flex-direction: row;\\n    gap:10px;\\n  }\\n\\n  .input-radio.on[_ngcontent-%COMP%]:checked {\\n    box-shadow: 0px 0px 0px 4px #00eb27;\\n    background-color: #51ff6e;\\n}\\n\\n\\n .span[_ngcontent-%COMP%] {\\n    background: radial-gradient(134.26% 244.64% at 42.92% -80.36%, #b301b3 25.45%, #381dbd 100%);\\n    -webkit-background-clip: text;\\n    -webkit-text-fill-color: transparent;\\n  }\\n  .icon-guardian[_ngcontent-%COMP%] {\\n    display: flex;\\n    justify-content: center;\\n    align-items: center;\\n    flex-direction: column;\\n    cursor: pointer;\\n}\\n\\n  button[_ngcontent-%COMP%]:disabled {\\n    background-color: #ccc;\\n  }\\n  \\n.step-class[_ngcontent-%COMP%] {\\n  background-color: #007bff3a;\\n  color: #007bff;\\n}\\n.step-content[_ngcontent-%COMP%] {\\n  font-weight: 100;\\n}\\n  .step-content[_ngcontent-%COMP%]    > div[_ngcontent-%COMP%] {\\n    padding: 10px;\\n  }\\n\\n\\n  @media (max-width: 500px) {\\n    .wizard[_ngcontent-%COMP%] {\\n      max-width: 400px;\\n    }\\n  }\\n\\n  \\n\\n.checkbox-container[_ngcontent-%COMP%] {\\n  display: flex;\\n  align-items: center;\\n  margin-bottom: 10px;\\n}\\n\\n.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%] {\\n  width: 20px;\\n  height: 20px;\\n  margin-right: 10px;\\n  cursor: pointer;\\n}\\n\\n.checkbox-label[_ngcontent-%COMP%] {\\n  font-size: 14px;\\n  color: #fff;\\n  font-weight: bold;\\n}\\n\\n.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked {\\n  background-color: #4CAF50; \\n\\n}\\n\\n.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus {\\n  outline: none;\\n  border: 2px solid #4CAF50;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy93aXphcmQvd2l6YXJkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxnQkFBZ0I7SUFDaEIsY0FBYztJQUNkLDhCQUE4QjtFQUNoQzs7RUFFQTtJQUNFLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0UsT0FBTztJQUNQLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsZUFBZTtJQUNmLDZCQUE2QjtFQUMvQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixnQ0FBZ0M7RUFDbEM7O0VBRUE7SUFDRSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLGtCQUFrQjtJQUNsQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxpQkFBaUI7SUFDakIsaUJBQWlCO0lBQ2pCLHlCQUF5QjtJQUN6QixZQUFZO0lBQ1osWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsYUFBYTtJQUNiLFlBQVk7TUFDViwyQkFBMkI7TUFDM0IseUJBQXlCO01BQ3pCLGlDQUFpQztNQUNqQyxnQkFBZ0I7TUFDaEIsa0NBQWtDO01BQ2xDLGVBQWU7TUFDZixXQUFXO0VBQ2Y7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsWUFBWTtJQUNaLDJCQUEyQjtJQUMzQix5QkFBeUI7SUFDekIsaUNBQWlDO0lBQ2pDLGdCQUFnQjtJQUNoQiwyQkFBMkI7SUFDM0IsZUFBZTtJQUNmLFdBQVc7SUFDWCxpQkFBaUI7RUFDbkI7O0VBRUE7SUFDRSxhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixtQkFBbUI7SUFDbkIsUUFBUTtFQUNWOztFQUVBO0lBQ0UsbUNBQW1DO0lBQ25DLHlCQUF5QjtBQUM3Qjs7O0NBR0M7SUFDRyw0RkFBNEY7SUFDNUYsNkJBQTZCO0lBQzdCLG9DQUFvQztFQUN0QztFQUNBO0lBQ0UsYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsc0JBQXNCO0lBQ3RCLGVBQWU7QUFDbkI7O0VBRUU7SUFDRSxzQkFBc0I7RUFDeEI7O0FBRUY7RUFDRSwyQkFBMkI7RUFDM0IsY0FBYztBQUNoQjtBQUNBO0VBQ0UsZ0JBQWdCO0FBQ2xCO0VBQ0U7SUFDRSxhQUFhO0VBQ2Y7OztFQUdBO0lBQ0U7TUFDRSxnQkFBZ0I7SUFDbEI7RUFDRjs7RUFFQSxrREFBa0Q7QUFDcEQ7RUFDRSxhQUFhO0VBQ2IsbUJBQW1CO0VBQ25CLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLFdBQVc7RUFDWCxZQUFZO0VBQ1osa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsV0FBVztFQUNYLGlCQUFpQjtBQUNuQjs7QUFFQTtFQUNFLHlCQUF5QixFQUFFLG1EQUFtRDtBQUNoRjs7QUFFQTtFQUNFLGFBQWE7RUFDYix5QkFBeUI7QUFDM0IiLCJzb3VyY2VzQ29udGVudCI6WyIud2l6YXJkIHtcbiAgICBtYXgtd2lkdGg6IDYwMHB4O1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIGZvbnQtZmFtaWx5OiBBcmlhbCwgc2Fucy1zZXJpZjtcbiAgfVxuICBcbiAgLnN0ZXBzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xuICB9XG4gIFxuICAuc3RlcHMgZGl2IHtcbiAgICBmbGV4OiAxO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgI2NjYztcbiAgfVxuICBcbiAgLnN0ZXBzIGRpdi5hY3RpdmUge1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMDA3YmZmO1xuICB9XG4gIFxuICAuc3RlcC1jb250ZW50IHtcbiAgICBwYWRkaW5nOiAyMHB4O1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgIG1hcmdpbi1ib3R0b206IDIwcHg7XG4gIH1cbiAgXG4gIC5uYXZpZ2F0aW9uIHtcbiAgICB0ZXh0LWFsaWduOiByaWdodDtcbiAgfVxuICBcbiAgYnV0dG9uIHtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgICBwYWRkaW5nOiA1cHggMTVweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA3YmZmO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICAgIGN1cnNvcjogcG9pbnRlcjtcbiAgfVxuXG4gIGlucHV0W3R5cGU9XCJ0ZXh0XCJdIHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICAgIGJvcmRlcjogbm9uZTtcbiAgICAgIGJvcmRlci1ib3R0b20td2lkdGg6IG1lZGl1bTtcbiAgICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IG5vbmU7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiBjdXJyZW50Y29sb3I7XG4gICAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIGFsaWNlYmx1ZTtcbiAgICAgIGN1cnNvcjpwb2ludGVyIDtcbiAgICAgIGNvbG9yOiAjZmZmO1xuICB9XG5cbiAgaW5wdXRbdHlwZT1cIm51bWJlclwiXSB7XG4gICAgcGFkZGluZzogMTBweDtcbiAgICBib3JkZXI6IG5vbmU7XG4gICAgYm9yZGVyLWJvdHRvbS13aWR0aDogbWVkaXVtO1xuICAgIGJvcmRlci1ib3R0b20tc3R5bGU6IG5vbmU7XG4gICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogY3VycmVudGNvbG9yO1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgYm9yZGVyOiAxcHggc29saWQgYWxpY2VibHVlO1xuICAgIGN1cnNvcjpwb2ludGVyIDtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBtYXJnaW4tbGVmdDogMTBweDtcbiAgfVxuICBcbiAgLnRpdGxlLXF1ZXN0aW9ubmFyeSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiByb3c7XG4gICAgZ2FwOjEwcHg7XG4gIH1cblxuICAuaW5wdXQtcmFkaW8ub246Y2hlY2tlZCB7XG4gICAgYm94LXNoYWRvdzogMHB4IDBweCAwcHggNHB4ICMwMGViMjc7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzUxZmY2ZTtcbn1cblxuXG4gLnNwYW4ge1xuICAgIGJhY2tncm91bmQ6IHJhZGlhbC1ncmFkaWVudCgxMzQuMjYlIDI0NC42NCUgYXQgNDIuOTIlIC04MC4zNiUsICNiMzAxYjMgMjUuNDUlLCAjMzgxZGJkIDEwMCUpO1xuICAgIC13ZWJraXQtYmFja2dyb3VuZC1jbGlwOiB0ZXh0O1xuICAgIC13ZWJraXQtdGV4dC1maWxsLWNvbG9yOiB0cmFuc3BhcmVudDtcbiAgfVxuICAuaWNvbi1ndWFyZGlhbiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4gIGJ1dHRvbjpkaXNhYmxlZCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2NjYztcbiAgfVxuICBcbi5zdGVwLWNsYXNzIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjNhO1xuICBjb2xvcjogIzAwN2JmZjtcbn1cbi5zdGVwLWNvbnRlbnQge1xuICBmb250LXdlaWdodDogMTAwO1xufVxuICAuc3RlcC1jb250ZW50ID4gZGl2IHtcbiAgICBwYWRkaW5nOiAxMHB4O1xuICB9XG5cblxuICBAbWVkaWEgKG1heC13aWR0aDogNTAwcHgpIHtcbiAgICAud2l6YXJkIHtcbiAgICAgIG1heC13aWR0aDogNDAwcHg7XG4gICAgfVxuICB9XG5cbiAgLyogU3R5bGVzIHBvdXIgbGVzIGNhc2VzIMODwqAgY29jaGVyIHBlcnNvbm5hbGlzw4PCqWVzICovXG4uY2hlY2tib3gtY29udGFpbmVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcbn1cblxuLmNoZWNrYm94LWNvbnRhaW5lciBpbnB1dCB7XG4gIHdpZHRoOiAyMHB4O1xuICBoZWlnaHQ6IDIwcHg7XG4gIG1hcmdpbi1yaWdodDogMTBweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG4uY2hlY2tib3gtbGFiZWwge1xuICBmb250LXNpemU6IDE0cHg7XG4gIGNvbG9yOiAjZmZmO1xuICBmb250LXdlaWdodDogYm9sZDtcbn1cblxuLmNoZWNrYm94LWNvbnRhaW5lciBpbnB1dDpjaGVja2VkIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDsgLyogQ29sb3JpZXIgbGEgY2FzZSBlbiB2ZXJ0IHF1YW5kIGVsbGUgZXN0IGNvY2jDg8KpZSAqL1xufVxuXG4uY2hlY2tib3gtY29udGFpbmVyIGlucHV0OmZvY3VzIHtcbiAgb3V0bGluZTogbm9uZTtcbiAgYm9yZGVyOiAycHggc29saWQgIzRDQUY1MDtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","EventEmitter","FormsModule","RadioButtonModule","ButtonModule","InputTextModule","SpinnerModule","Swal","WizardComponent","router","apiService","title","onSubmit","currentStep","responses","steps","constructor","ngOnInit","getQuestions","subscribe","questions","console","log","organizeQuestionsByStep","forEach","question","step","find","s","push","goToStep","index","length","nextStep","previousStep","submitWizard","$event","fire","text","icon","showCancelButton","confirmButtonText","cancelButtonText","reverseButtons","then","result","isConfirmed","handleSubmit","event","formattedResponses","formatResponses","submitResponses","response","message","navigate","emit","success","error","Object","keys","map","key","questionId","i0","ɵɵdirectiveInject","i1","Router","i2","ApiService","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","template","WizardComponent_Template","rf","ctx","dependencies","styles"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/wizard/wizard.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { ApiService } from 'src/services/api.service';\n// Import PrimeNG Modules\nimport { RadioButtonModule } from 'primeng/radiobutton';\nimport { ButtonModule } from 'primeng/button'; // Si vous utilisez pButton\nimport { InputTextModule } from 'primeng/inputtext'; // Pour p-inputText\nimport { SpinnerModule } from 'primeng/spinner'; // Pour p-spinner\nimport Swal from 'sweetalert2';\n@Component({\n  selector: 'app-wizard',\n  templateUrl: './wizard.component.html',\n  styleUrls: ['./wizard.component.css'],\n  standalone:true,\n  imports:[FormsModule,CommonModule,\n    FormsModule,\n    RadioButtonModule,\n    ButtonModule,\n    InputTextModule,\n    SpinnerModule]\n})\nexport class WizardComponent {\n  @Input() title: string = ''; \n  @Output() onSubmit = new EventEmitter<any>(); \n\n  currentStep = 0;\n  responses: { [key: number]: any } = {};\n  @Input() steps: any[];\n  constructor(private router:Router, private apiService: ApiService) {}\n\n  ngOnInit() {\n   \n    // Charger les questions depuis l'API\n    this.apiService.getQuestions().subscribe((questions) => {\n      // Organiser les questions par étape\n      console.log(questions)\n      this.steps = this.organizeQuestionsByStep(questions);\n    });\n  }\n\n   organizeQuestionsByStep(questions) {\n    const steps = [];\n  \n    questions.questions.forEach((question) => {\n      // Chercher l'étape existante pour cette question\n      const step = steps.find((s) => s.step === question.step);\n      \n      // Si l'étape n'existe pas encore, on la crée\n      if (!step) {\n        steps.push({ step: question.step, questions: [question] });\n      } else {\n        // Si l'étape existe déjà, on ajoute la question\n        step.questions.push(question);\n      }\n    });\n  \n    return steps;\n  }\n  \n\n\n\n  goToStep(index: number) {\n    if (index >= 0 && index < this.steps.length) {\n      this.currentStep = index;\n    }\n  }\n\n  nextStep() {\n    if (this.currentStep < this.steps.length - 1) {\n      this.currentStep++;\n    }\n  }\n\n  previousStep() {\n    if (this.currentStep > 0) {\n      this.currentStep--;\n    }\n  }\n  submitWizard($event:any){\n  \n    // Afficher la fenêtre de confirmation avec SweetAlert2\n    Swal.fire({\n      title: 'Êtes-vous sûr de vouloir soumettre le questionnaire?',\n      text: 'Vous ne pourrez pas modifier vos réponses une fois soumises.',\n      icon: 'warning',\n      showCancelButton: true,  // Montre un bouton \"Annuler\"\n      confirmButtonText: 'Oui, soumettre',\n      cancelButtonText: 'Non, annuler',\n      reverseButtons: true  // Inverse l'ordre des boutons (Annuler à gauche, Soumettre à droite)\n    }).then((result) => {\n      if (result.isConfirmed) {\n        // Si l'utilisateur confirme, on peut envoyer les réponses\n        this.handleSubmit($event)\n        \n        Swal.fire(\n          'Soumis!',\n          'Vos réponses ont été envoyées avec succès.',\n          'success'\n        );\n        // Appelez la logique de soumission ici, par exemple envoyer les réponses à votre serveur.\n        // this.apiService.submitResponses(responses);\n      } else {\n        // Si l'utilisateur annule, vous pouvez afficher un message d'annulation\n        Swal.fire(\n          'Annulé',\n          'La soumission du questionnaire a été annulée.',\n          'info'\n        );\n      }\n    });\n  }\n  handleSubmit(event:any) {\n    console.log('Réponses soumises:', this.responses);\n\n    // 1. Structurer les réponses, si nécessaire\n    const formattedResponses = this.formatResponses(this.responses);\n\n    // 2. Soumettre les réponses au backend via le service\n    this.apiService.submitResponses(formattedResponses).subscribe(\n      (response) => {\n        console.log('Réponses envoyées avec succès', response);\n        \n        // Vérifiez si la réponse du backend indique un succès\n        if (response.message === 'Réponses enregistrées avec succès') {\n          // Redirige l'utilisateur vers la page d'accueil\n          this.router.navigate(['/home-page']);  // 'home-page' est l'URL vers la page d'accueil\n        }\n        this.onSubmit.emit({ success: true, response });  // Émet un événement si l'envoi réussit\n      },\n      (error) => {\n        console.error('Erreur lors de l\\'envoi des réponses', error);\n        this.onSubmit.emit({ success: false, error });  // Émet un événement en cas d'erreur\n      }\n    );\n  }\n\n  // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n  formatResponses(responses: any) {\n    // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n    return Object.keys(responses).map((key) => ({\n      questionId: key,\n      response: responses[key]\n    }));\n  }\n}\n"],"mappings":"AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAmCC,YAAY,QAAQ,eAAe;AACtE,SAASC,WAAW,QAAQ,gBAAgB;AAG5C;AACA,SAASC,iBAAiB,QAAQ,qBAAqB;AACvD,SAASC,YAAY,QAAQ,gBAAgB,CAAC,CAAC;AAC/C,SAASC,eAAe,QAAQ,mBAAmB,CAAC,CAAC;AACrD,SAASC,aAAa,QAAQ,iBAAiB,CAAC,CAAC;AACjD,OAAOC,IAAI,MAAM,aAAa;;;;AAa9B,OAAM,MAAOC,eAAe;EAONC,MAAA;EAAuBC,UAAA;EANlCC,KAAK,GAAW,EAAE;EACjBC,QAAQ,GAAG,IAAIX,YAAY,EAAO;EAE5CY,WAAW,GAAG,CAAC;EACfC,SAAS,GAA2B,EAAE;EAC7BC,KAAK;EACdC,YAAoBP,MAAa,EAAUC,UAAsB;IAA7C,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,UAAU,GAAVA,UAAU;EAAe;EAEpEO,QAAQA,CAAA;IAEN;IACA,IAAI,CAACP,UAAU,CAACQ,YAAY,EAAE,CAACC,SAAS,CAAEC,SAAS,IAAI;MACrD;MACAC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;MACtB,IAAI,CAACL,KAAK,GAAG,IAAI,CAACQ,uBAAuB,CAACH,SAAS,CAAC;IACtD,CAAC,CAAC;EACJ;EAECG,uBAAuBA,CAACH,SAAS;IAChC,MAAML,KAAK,GAAG,EAAE;IAEhBK,SAAS,CAACA,SAAS,CAACI,OAAO,CAAEC,QAAQ,IAAI;MACvC;MACA,MAAMC,IAAI,GAAGX,KAAK,CAACY,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACF,IAAI,KAAKD,QAAQ,CAACC,IAAI,CAAC;MAExD;MACA,IAAI,CAACA,IAAI,EAAE;QACTX,KAAK,CAACc,IAAI,CAAC;UAAEH,IAAI,EAAED,QAAQ,CAACC,IAAI;UAAEN,SAAS,EAAE,CAACK,QAAQ;QAAC,CAAE,CAAC;OAC3D,MAAM;QACL;QACAC,IAAI,CAACN,SAAS,CAACS,IAAI,CAACJ,QAAQ,CAAC;;IAEjC,CAAC,CAAC;IAEF,OAAOV,KAAK;EACd;EAKAe,QAAQA,CAACC,KAAa;IACpB,IAAIA,KAAK,IAAI,CAAC,IAAIA,KAAK,GAAG,IAAI,CAAChB,KAAK,CAACiB,MAAM,EAAE;MAC3C,IAAI,CAACnB,WAAW,GAAGkB,KAAK;;EAE5B;EAEAE,QAAQA,CAAA;IACN,IAAI,IAAI,CAACpB,WAAW,GAAG,IAAI,CAACE,KAAK,CAACiB,MAAM,GAAG,CAAC,EAAE;MAC5C,IAAI,CAACnB,WAAW,EAAE;;EAEtB;EAEAqB,YAAYA,CAAA;IACV,IAAI,IAAI,CAACrB,WAAW,GAAG,CAAC,EAAE;MACxB,IAAI,CAACA,WAAW,EAAE;;EAEtB;EACAsB,YAAYA,CAACC,MAAU;IAErB;IACA7B,IAAI,CAAC8B,IAAI,CAAC;MACR1B,KAAK,EAAE,sDAAsD;MAC7D2B,IAAI,EAAE,8DAA8D;MACpEC,IAAI,EAAE,SAAS;MACfC,gBAAgB,EAAE,IAAI;MACtBC,iBAAiB,EAAE,gBAAgB;MACnCC,gBAAgB,EAAE,cAAc;MAChCC,cAAc,EAAE,IAAI,CAAE;KACvB,CAAC,CAACC,IAAI,CAAEC,MAAM,IAAI;MACjB,IAAIA,MAAM,CAACC,WAAW,EAAE;QACtB;QACA,IAAI,CAACC,YAAY,CAACX,MAAM,CAAC;QAEzB7B,IAAI,CAAC8B,IAAI,CACP,SAAS,EACT,4CAA4C,EAC5C,SAAS,CACV;QACD;QACA;OACD,MAAM;QACL;QACA9B,IAAI,CAAC8B,IAAI,CACP,QAAQ,EACR,+CAA+C,EAC/C,MAAM,CACP;;IAEL,CAAC,CAAC;EACJ;EACAU,YAAYA,CAACC,KAAS;IACpB3B,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAE,IAAI,CAACR,SAAS,CAAC;IAEjD;IACA,MAAMmC,kBAAkB,GAAG,IAAI,CAACC,eAAe,CAAC,IAAI,CAACpC,SAAS,CAAC;IAE/D;IACA,IAAI,CAACJ,UAAU,CAACyC,eAAe,CAACF,kBAAkB,CAAC,CAAC9B,SAAS,CAC1DiC,QAAQ,IAAI;MACX/B,OAAO,CAACC,GAAG,CAAC,+BAA+B,EAAE8B,QAAQ,CAAC;MAEtD;MACA,IAAIA,QAAQ,CAACC,OAAO,KAAK,mCAAmC,EAAE;QAC5D;QACA,IAAI,CAAC5C,MAAM,CAAC6C,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAE;;MAEzC,IAAI,CAAC1C,QAAQ,CAAC2C,IAAI,CAAC;QAAEC,OAAO,EAAE,IAAI;QAAEJ;MAAQ,CAAE,CAAC,CAAC,CAAE;IACpD,CAAC,EACAK,KAAK,IAAI;MACRpC,OAAO,CAACoC,KAAK,CAAC,sCAAsC,EAAEA,KAAK,CAAC;MAC5D,IAAI,CAAC7C,QAAQ,CAAC2C,IAAI,CAAC;QAAEC,OAAO,EAAE,KAAK;QAAEC;MAAK,CAAE,CAAC,CAAC,CAAE;IAClD,CAAC,CACF;EACH;EAEA;EACAP,eAAeA,CAACpC,SAAc;IAC5B;IACA,OAAO4C,MAAM,CAACC,IAAI,CAAC7C,SAAS,CAAC,CAAC8C,GAAG,CAAEC,GAAG,KAAM;MAC1CC,UAAU,EAAED,GAAG;MACfT,QAAQ,EAAEtC,SAAS,CAAC+C,GAAG;KACxB,CAAC,CAAC;EACL;;qBA3HWrD,eAAe,EAAAuD,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,MAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,UAAA;EAAA;;UAAf5D,eAAe;IAAA6D,SAAA;IAAAC,MAAA;MAAA3D,KAAA;MAAAI,KAAA;IAAA;IAAAwD,OAAA;MAAA3D,QAAA;IAAA;IAAA4D,UAAA;IAAAC,QAAA,GAAAV,EAAA,CAAAW,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;IAAAC,YAAA,GAPjB/E,WAAW,EAACF,YAAY,EAE/BG,iBAAiB,EACjBC,YAAY,EACZC,eAAe,EACfC,aAAa;IAAA4E,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}