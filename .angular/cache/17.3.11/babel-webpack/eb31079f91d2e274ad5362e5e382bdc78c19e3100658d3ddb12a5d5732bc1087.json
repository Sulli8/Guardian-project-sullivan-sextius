{"ast":null,"code":"import _asyncToGenerator from \"/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\nimport { faPrescriptionBottle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CommonModule } from '@angular/common';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nlet HomePageComponent = class HomePageComponent {\n  router;\n  apiService;\n  faPrescriptionBottle = faPrescriptionBottle;\n  faPlus = faPlus;\n  hasAnswered = false;\n  message = '';\n  prescriptions = [];\n  constructor(router, apiService) {\n    this.router = router;\n    this.apiService = apiService;\n  }\n  weekDays = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];\n  // Date actuellement affichée\n  displayDate = new Date();\n  // Change la date en fonction du défilement\n  onScroll(event) {\n    const scrollLeft = event.target.scrollLeft;\n    const dayWidth = 100; // Largeur approximative de chaque jour dans le carrousel\n    const dayIndex = Math.floor(scrollLeft / dayWidth);\n    // Ajouter ou soustraire des jours en fonction du défilement\n    const newDate = new Date(this.displayDate);\n    newDate.setDate(this.displayDate.getDate() + dayIndex);\n    this.displayDate = newDate;\n  }\n  // Changer la date en augmentant ou diminuant\n  changeDate(offset) {\n    const newDate = new Date(this.displayDate);\n    newDate.setDate(this.displayDate.getDate() + offset);\n    this.displayDate = newDate;\n  }\n  ngAfterViewInit() {\n    this.apiService.getPrescription().subscribe(response => {\n      this.prescriptions = response.result;\n      //console.log(this.prescriptions)\n    }, error => {\n      console.error('Erreur lors de la vérification des réponses:', error);\n      this.message = 'Erreur lors de la vérification de vos réponses.';\n    });\n  }\n  exportToPDF() {\n    this.apiService.exportPrescriptions().subscribe(response => {\n      const blob = response.body;\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'prescriptions.pdf'; // Nom du fichier PDF téléchargé\n      link.click();\n      window.URL.revokeObjectURL(url); // Libérer la mémoire\n    }, error => {\n      console.error('Erreur lors du téléchargement du PDF:', error);\n    });\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.displayDate = new Date();\n      // Appel initial de la méthode checkNotify\n      _this.callCheckNotify();\n      // Répéter l'appel toutes les 10 secondes\n      setInterval(() => {\n        _this.callCheckNotify();\n      }, 10000);\n      // Vérification des réponses de l'utilisateur\n      _this.apiService.checkIfUserHasAnswered().subscribe(response => {\n        _this.message = response.message; // Affiche le message\n        _this.apiService.handleRedirection(response.valeur); // Redirige en fonction de la valeur\n      }, error => {\n        console.error('Erreur lors de la vérification des réponses:', error);\n        _this.message = 'Erreur lors de la vérification de vos réponses.';\n      });\n    })();\n  }\n  // Méthode pour appeler checkNotify\n  callCheckNotify() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield _this2.apiService.checkNotify(); // Convertir l'Observable en Promise\n        console.log('Réponse de check-notify', response);\n      } catch (error) {\n        console.error('Erreur lors de l\\'appel à check-notify', error);\n      }\n    })();\n  }\n  viewPrescriptions() {\n    // Redirige vers la page de liste des prescriptions\n    this.router.navigate(['/list-prescriptions']); // Assurez-vous que cette route existe\n  }\n  addPrescription() {\n    this.router.navigate(['/add-prescription']); // Assurez-vous que cette route existe\n  }\n};\nHomePageComponent = __decorate([Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css'],\n  standalone: true,\n  imports: [NavBarComponent, FontAwesomeModule, CommonModule]\n})], HomePageComponent);\nexport { HomePageComponent };","map":{"version":3,"names":["Component","NavBarComponent","faPrescriptionBottle","FontAwesomeModule","CommonModule","faPlus","HomePageComponent","router","apiService","hasAnswered","message","prescriptions","constructor","weekDays","displayDate","Date","onScroll","event","scrollLeft","target","dayWidth","dayIndex","Math","floor","newDate","setDate","getDate","changeDate","offset","ngAfterViewInit","getPrescription","subscribe","response","result","error","console","exportToPDF","exportPrescriptions","blob","body","url","window","URL","createObjectURL","link","document","createElement","href","download","click","revokeObjectURL","ngOnInit","_this","_asyncToGenerator","callCheckNotify","setInterval","checkIfUserHasAnswered","handleRedirection","valeur","_this2","checkNotify","log","viewPrescriptions","navigate","addPrescription","__decorate","selector","templateUrl","styleUrls","standalone","imports"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/home-page/home-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Si vous avez besoin de rediriger l'utilisateur\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\nimport { faPrescriptionBottle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CommonModule } from '@angular/common';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { ApiService } from 'src/services/api.service';\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css'],\n  standalone:true,\n  imports:[NavBarComponent,FontAwesomeModule,CommonModule]\n})\nexport class HomePageComponent {\n  faPrescriptionBottle = faPrescriptionBottle;\n  faPlus = faPlus;\n  hasAnswered: boolean = false;\n  message: string = '';\n  prescriptions:any[] = [];\n\n  constructor(private router: Router,private apiService:ApiService) {}\n  weekDays: string[] = ['L', 'M', 'M', 'J', 'V', 'S', 'D'];\n  \n  // Date actuellement affichée\n  displayDate: Date = new Date();\n  // Change la date en fonction du défilement\n  onScroll(event: any): void {\n    const scrollLeft = event.target.scrollLeft;\n    const dayWidth = 100;  // Largeur approximative de chaque jour dans le carrousel\n    const dayIndex = Math.floor(scrollLeft / dayWidth);\n    \n    // Ajouter ou soustraire des jours en fonction du défilement\n    const newDate = new Date(this.displayDate);\n    newDate.setDate(this.displayDate.getDate() + dayIndex);\n    this.displayDate = newDate;\n  }\n\n  // Changer la date en augmentant ou diminuant\n  changeDate(offset: number): void {\n    const newDate = new Date(this.displayDate);\n    newDate.setDate(this.displayDate.getDate() + offset);\n    this.displayDate = newDate;\n  }\n  ngAfterViewInit(){\n  this.apiService.getPrescription().subscribe(\n    (response) => {\n     this.prescriptions = response.result\n     //console.log(this.prescriptions)\n   },\n   (error) => {\n     console.error('Erreur lors de la vérification des réponses:', error);\n     this.message = 'Erreur lors de la vérification de vos réponses.';\n   }\n )\n}\nexportToPDF(): void {\n  this.apiService.exportPrescriptions().subscribe(\n    (response) => {\n      const blob = response.body;\n      const url = window.URL.createObjectURL(blob);\n      const link = document.createElement('a');\n      link.href = url;\n      link.download = 'prescriptions.pdf'; // Nom du fichier PDF téléchargé\n      link.click();\n      window.URL.revokeObjectURL(url); // Libérer la mémoire\n    },\n    (error) => {\n      console.error('Erreur lors du téléchargement du PDF:', error);\n    }\n  );\n}\n\n  async ngOnInit() {\n    this.displayDate = new Date();\n    // Appel initial de la méthode checkNotify\n    this.callCheckNotify();\n    // Répéter l'appel toutes les 10 secondes\n    setInterval(() => {\n      this.callCheckNotify();\n    }, 10000);\n  \n    // Vérification des réponses de l'utilisateur\n    this.apiService.checkIfUserHasAnswered().subscribe(\n      (response) => {\n        this.message = response.message;  // Affiche le message\n        this.apiService.handleRedirection(response.valeur);  // Redirige en fonction de la valeur\n      },\n      (error) => {\n        console.error('Erreur lors de la vérification des réponses:', error);\n        this.message = 'Erreur lors de la vérification de vos réponses.';\n      }\n    );\n\n    \n  }\n  \n  // Méthode pour appeler checkNotify\n  async callCheckNotify() {\n    try {\n      const response = await this.apiService.checkNotify(); // Convertir l'Observable en Promise\n      console.log('Réponse de check-notify', response);\n    } catch (error) {\n      console.error('Erreur lors de l\\'appel à check-notify', error);\n    }\n  }\n  \n  viewPrescriptions() {\n    // Redirige vers la page de liste des prescriptions\n    this.router.navigate(['/list-prescriptions']); // Assurez-vous que cette route existe\n  }\n\n  addPrescription() {\n    this.router.navigate(['/add-prescription']); // Assurez-vous que cette route existe\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}