{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, Validators } from '@angular/forms';\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"src/services/api.service\";\nimport * as i4 from \"@angular/common\";\nfunction PrescriptionFormComponent_div_3__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_3__svg_svg_2_Template_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.previousStep());\n    });\n    i0.ɵɵelement(1, \"polygon\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n    i0.ɵɵtemplate(2, PrescriptionFormComponent_div_3__svg_svg_2_Template, 2, 0, \"svg\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementStart(4, \"label\", 8);\n    i0.ɵɵtext(5, \"Nom du traitement\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"input\", 9);\n    i0.ɵɵelementStart(7, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_3_Template_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.nextStep());\n    });\n    i0.ɵɵtext(8, \"Suivant\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentStepIndex > 0);\n  }\n}\nfunction PrescriptionFormComponent_div_4__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_4__svg_svg_2_Template_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.previousStep());\n    });\n    i0.ɵɵelement(1, \"polygon\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_4_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" La fr\\u00E9quence est requise. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 5);\n    i0.ɵɵtemplate(2, PrescriptionFormComponent_div_4__svg_svg_2_Template, 2, 0, \"svg\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementStart(4, \"label\", 14);\n    i0.ɵɵtext(5, \"R\\u00E9currence\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"select\", 15)(7, \"option\", 16);\n    i0.ɵɵtext(8, \"1 fois par jour\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"option\", 17);\n    i0.ɵɵtext(10, \"2 fois par jour\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"option\", 18);\n    i0.ɵɵtext(12, \"Toutes les 30 secondes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"option\", 19);\n    i0.ɵɵtext(14, \"Toutes les 10 minutes\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"option\", 20);\n    i0.ɵɵtext(16, \"Toutes les 4 heures\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"option\", 21);\n    i0.ɵɵtext(18, \"Toutes les 8 heures\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"option\", 22);\n    i0.ɵɵtext(20, \"Toutes les 12 heures\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(21, PrescriptionFormComponent_div_4_div_21_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementStart(22, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_4_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.nextStep());\n    });\n    i0.ɵɵtext(23, \"Suivant\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentStepIndex > 0);\n    i0.ɵɵadvance(19);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.prescriptionForm.get(\"frequence\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r2.prescriptionForm.get(\"frequence\")) == null ? null : tmp_2_0.touched));\n  }\n}\nfunction PrescriptionFormComponent_div_5__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_5__svg_svg_2_Template_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.previousStep());\n    });\n    i0.ɵɵelement(1, \"polygon\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_5_option_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const medication_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", medication_r8._id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", medication_r8.name, \" \");\n  }\n}\nfunction PrescriptionFormComponent_div_5_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Vous devez s\\u00E9lectionner un m\\u00E9dicament. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 5);\n    i0.ɵɵtemplate(2, PrescriptionFormComponent_div_5__svg_svg_2_Template, 2, 0, \"svg\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementStart(4, \"label\", 25);\n    i0.ɵɵtext(5, \"Medication\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(6, \"select\", 26)(7, \"option\", 27);\n    i0.ɵɵtext(8, \"Select a medication\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, PrescriptionFormComponent_div_5_option_9_Template, 2, 2, \"option\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, PrescriptionFormComponent_div_5_div_10_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementStart(11, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_5_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.nextStep());\n    });\n    i0.ɵɵtext(12, \"Suivant\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_3_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentStepIndex > 0);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.medications);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r2.prescriptionForm.get(\"medicationId\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r2.prescriptionForm.get(\"medicationId\")) == null ? null : tmp_3_0.touched));\n  }\n}\nfunction PrescriptionFormComponent_div_6__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_6__svg_svg_2_Template_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.previousStep());\n    });\n    i0.ɵɵelement(1, \"polygon\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_6_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" Le dosage est requis. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 5);\n    i0.ɵɵtemplate(2, PrescriptionFormComponent_div_6__svg_svg_2_Template, 2, 0, \"svg\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementStart(4, \"label\", 30);\n    i0.ɵɵtext(5, \"Dosage\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"input\", 31);\n    i0.ɵɵtemplate(7, PrescriptionFormComponent_div_6_div_7_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementStart(8, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_6_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.nextStep());\n    });\n    i0.ɵɵtext(9, \"Suivant\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentStepIndex > 0);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx_r2.prescriptionForm.get(\"dosage\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx_r2.prescriptionForm.get(\"dosage\")) == null ? null : tmp_2_0.touched));\n  }\n}\nfunction PrescriptionFormComponent_div_7__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_7__svg_svg_2_Template_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.previousStep());\n    });\n    i0.ɵɵelement(1, \"polygon\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_7_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" La date est requise. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 5);\n    i0.ɵɵtemplate(2, PrescriptionFormComponent_div_7__svg_svg_2_Template, 2, 0, \"svg\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementStart(4, \"label\", 32);\n    i0.ɵɵtext(5, \"Date de prescription\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"input\", 33);\n    i0.ɵɵtemplate(7, PrescriptionFormComponent_div_7_div_7_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementStart(8, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_7_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.nextStep());\n    });\n    i0.ɵɵtext(9, \"Suivant\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    let tmp_3_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentStepIndex > 0);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", (tmp_2_0 = ctx_r2.prescriptionForm.get(\"datePrescribed\")) == null ? null : tmp_2_0.value);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r2.prescriptionForm.get(\"datePrescribed\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r2.prescriptionForm.get(\"datePrescribed\")) == null ? null : tmp_3_0.touched));\n  }\n}\nfunction PrescriptionFormComponent_div_8__svg_svg_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 11);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_8__svg_svg_2_Template_svg_click_0_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.previousStep());\n    });\n    i0.ɵɵelement(1, \"polygon\", 12);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_8_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 24);\n    i0.ɵɵtext(1, \" L'heure est requise. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction PrescriptionFormComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 13)(1, \"div\", 5);\n    i0.ɵɵtemplate(2, PrescriptionFormComponent_div_8__svg_svg_2_Template, 2, 0, \"svg\", 6);\n    i0.ɵɵelement(3, \"img\", 7);\n    i0.ɵɵelementStart(4, \"label\", 34);\n    i0.ɵɵtext(5, \"Heure de prescription\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(6, \"input\", 35);\n    i0.ɵɵtemplate(7, PrescriptionFormComponent_div_8_div_7_Template, 2, 0, \"div\", 23);\n    i0.ɵɵelementStart(8, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function PrescriptionFormComponent_div_8_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.nextStep());\n    });\n    i0.ɵɵtext(9, \"Suivant\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_2_0;\n    let tmp_3_0;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentStepIndex > 0);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"value\", (tmp_2_0 = ctx_r2.prescriptionForm.get(\"timePrescribed\")) == null ? null : tmp_2_0.value);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx_r2.prescriptionForm.get(\"timePrescribed\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx_r2.prescriptionForm.get(\"timePrescribed\")) == null ? null : tmp_3_0.touched));\n  }\n}\nexport let PrescriptionFormComponent = /*#__PURE__*/(() => {\n  class PrescriptionFormComponent {\n    router;\n    fb;\n    apiService;\n    prescriptionForm;\n    medications;\n    stepData = [{\n      key: 'nom',\n      value: ''\n    }, {\n      key: 'traitement',\n      value: ''\n    }, {\n      key: 'frequence',\n      value: ''\n    }, {\n      key: 'medicament',\n      value: ''\n    }, {\n      key: 'dosage',\n      value: ''\n    }, {\n      key: 'prescriptionDate',\n      value: ''\n    }, {\n      key: 'prescriptionTime',\n      value: ''\n    }];\n    currentStepIndex = 0; // Pour suivre l'étape actuelle\n    constructor(router, fb, apiService) {\n      this.router = router;\n      this.fb = fb;\n      this.apiService = apiService;\n      this.prescriptionForm = this.fb.group({\n        medicationId: ['', Validators.required],\n        dosage: ['', Validators.required],\n        frequence: ['', Validators.required],\n        datePrescribed: [new Date().toISOString(), Validators.required],\n        timePrescribed: [new Date().toISOString(), Validators.required] // Heure actuelle\n      });\n    }\n    ngOnInit() {\n      this.apiService.getMedications().subscribe({\n        next: data => {\n          // S'assurer que les données reçues sont un tableau d'objets Medication\n          if (Array.isArray(data)) {\n            this.medications = data; // Remplacez le tableau vide par les données reçues\n            console.log('Médicaments récupérés :', this.medications);\n          } else {\n            console.error('Les données récupérées ne sont pas un tableau !');\n          }\n        },\n        error: err => {\n          console.error('Erreur lors de la récupération des médicaments :', err);\n        }\n      });\n    }\n    nextStep() {\n      if (this.currentStepIndex < 6) {\n        this.currentStepIndex++;\n      }\n      if (this.currentStepIndex === 6) {\n        // Afficher un SweetAlert de confirmation avant de valider\n        Swal.fire({\n          title: 'Êtes-vous sûr ?',\n          text: \"Êtes-vous sûr de vouloir valider le formulaire ?\",\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonText: 'Oui, valider',\n          cancelButtonText: 'Non, revenir en arrière'\n        }).then(result => {\n          if (result.isConfirmed) {\n            // Code pour valider le formulaire ou effectuer l'action finale\n            this.onSubmit(); // Exemple de méthode pour soumettre le formulaire\n          } else {\n            // Si l'utilisateur annule, revenir en arrière (ne pas incrémenter l'index)\n            this.currentStepIndex--;\n          }\n        });\n      }\n    }\n    previousStep() {\n      this.currentStepIndex--;\n    }\n    showSuccessAlert() {\n      Swal.fire({\n        title: 'Succès!',\n        text: 'La prescription a été remplie avec succès.',\n        icon: 'success',\n        confirmButtonText: 'OK'\n      }).then(result => {\n        if (result.isConfirmed) {\n          // Rediriger vers la page d'accueil (home-page)\n          this.router.navigate(['/home-page']);\n        }\n      });\n    }\n    onSubmit() {\n      console.log(this.prescriptionForm);\n      if (this.prescriptionForm.valid) {\n        const formData = this.prescriptionForm.value;\n        console.log(formData);\n        // Rechercher le médicament sélectionné par son ID\n        const selectedMedication = this.medications.find(med => med._id === formData.medicationId // Comparer directement les deux comme des chaînes\n        );\n        // Construire l'objet prescriptionData\n        const prescriptionData = {\n          medicationId: selectedMedication?._id || null,\n          medicationName: selectedMedication?.name || 'Médicament inconnu',\n          frequence: formData.frequence,\n          dosage: formData.dosage,\n          datePrescribed: formData.datePrescribed,\n          timePrescribed: formData.timePrescribed\n        };\n        this.apiService.postPrescriptions(prescriptionData).subscribe({\n          next: response => {\n            this.showSuccessAlert();\n            console.log('Prescription ajoutée avec succès :', response);\n          },\n          error: err => {\n            console.error('Erreur lors de l\\'envoi de la prescription :', err);\n          }\n        });\n        console.log('Prescription Data:', prescriptionData);\n        // Ajouter ici l'appel à une API ou toute autre action pour envoyer les données\n        // Exemple : this.apiService.postPrescription(prescriptionData).subscribe(...);\n      } else {\n        console.log('Le formulaire est invalide.');\n      }\n    }\n    static ɵfac = function PrescriptionFormComponent_Factory(t) {\n      return new (t || PrescriptionFormComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: PrescriptionFormComponent,\n      selectors: [[\"app-prescription-form\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 9,\n      vars: 7,\n      consts: [[1, \"container\"], [1, \"prescriptionForm\", 3, \"ngSubmit\", \"formGroup\"], [\"class\", \"form_group_1\", 4, \"ngIf\"], [\"class\", \"form-group\", 4, \"ngIf\"], [1, \"form_group_1\"], [1, \"container-labal-svg\"], [\"fill\", \"#fff\", \"height\", \"30px\", \"width\", \"30px\", \"version\", \"1.1\", \"id\", \"Layer_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"viewBox\", \"0 0 476.213 476.213\", 0, \"xml\", \"space\", \"preserve\", 3, \"click\", 4, \"ngIf\"], [\"src\", \"../../../assets/icons/icon-treatment-1.png\", 1, \"icon-treatment-1\"], [\"for\", \"Nom-treatement\", 1, \"name-treatment\"], [\"type\", \"text\", \"placeholder\", \"Ajouter le nom de la prescription\", 1, \"form-control\"], [\"type\", \"button\", 1, \"next-step\", 3, \"click\"], [\"fill\", \"#fff\", \"height\", \"30px\", \"width\", \"30px\", \"version\", \"1.1\", \"id\", \"Layer_1\", \"xmlns\", \"http://www.w3.org/2000/svg\", 0, \"xmlns\", \"xlink\", \"http://www.w3.org/1999/xlink\", \"viewBox\", \"0 0 476.213 476.213\", 0, \"xml\", \"space\", \"preserve\", 3, \"click\"], [\"points\", \"476.213,223.107 57.427,223.107 151.82,128.713 130.607,107.5 0,238.106 130.607,368.714 151.82,347.5   57.427,253.107 476.213,253.107 \"], [1, \"form-group\"], [\"for\", \"frequence\"], [\"formControlName\", \"frequence\", 1, \"select-form\"], [\"value\", \"1 fois par jour\"], [\"value\", \"2 fois par jour\"], [\"value\", \"Toutes les 30 secondes\"], [\"value\", \"Toutes les 10 minutes\"], [\"value\", \"Toutes les 4 heures\"], [\"value\", \"Toutes les 8 heures\"], [\"value\", \"Toutes les 12 heures\"], [\"class\", \"text-danger\", 4, \"ngIf\"], [1, \"text-danger\"], [\"for\", \"medicationId\"], [\"id\", \"medicationId\", \"formControlName\", \"medicationId\", 1, \"select-form\", \"form-control\"], [\"value\", \"\", \"disabled\", \"\", \"selected\", \"\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [\"for\", \"dosage\"], [\"id\", \"dosage\", \"type\", \"text\", \"formControlName\", \"dosage\", \"placeholder\", \"Entrez le dosage\", 1, \"form-control\"], [\"for\", \"datePrescribed\"], [\"id\", \"datePrescribed\", \"type\", \"date\", \"formControlName\", \"datePrescribed\", 1, \"form-control\", 3, \"value\"], [\"for\", \"timePrescribed\"], [\"id\", \"timePrescribed\", \"type\", \"time\", \"formControlName\", \"timePrescribed\", 1, \"form-control\", 3, \"value\"]],\n      template: function PrescriptionFormComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"app-nav-bar\");\n          i0.ɵɵelementStart(1, \"div\", 0)(2, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function PrescriptionFormComponent_Template_form_ngSubmit_2_listener() {\n            return ctx.onSubmit();\n          });\n          i0.ɵɵtemplate(3, PrescriptionFormComponent_div_3_Template, 9, 1, \"div\", 2)(4, PrescriptionFormComponent_div_4_Template, 24, 2, \"div\", 3)(5, PrescriptionFormComponent_div_5_Template, 13, 3, \"div\", 3)(6, PrescriptionFormComponent_div_6_Template, 10, 2, \"div\", 3)(7, PrescriptionFormComponent_div_7_Template, 10, 3, \"div\", 3)(8, PrescriptionFormComponent_div_8_Template, 10, 3, \"div\", 3);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"formGroup\", ctx.prescriptionForm);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.currentStepIndex === 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.currentStepIndex === 1);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.currentStepIndex === 2);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.currentStepIndex === 3);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.currentStepIndex === 4);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.currentStepIndex === 5);\n        }\n      },\n      dependencies: [ReactiveFormsModule, i2.ɵNgNoValidate, i2.NgSelectOption, i2.ɵNgSelectMultipleOption, i2.DefaultValueAccessor, i2.SelectControlValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, CommonModule, i4.NgForOf, i4.NgIf, NavBarComponent, SweetAlert2Module],\n      styles: [\"[_nghost-%COMP%]{background-color:#1c1c1e}.container[_ngcontent-%COMP%]{margin:auto;display:flex;justify-content:space-between;align-items:center;flex-direction:column;min-height:50vh}.icon-treatment-1[_ngcontent-%COMP%]{display:block;margin:auto;height:100px;width:100px}.form-control[_ngcontent-%COMP%]{margin-top:10px;color:#fff;background-color:#44444a;border-radius:5px;padding:12px;width:94%;height:10px;border:none}.form-control[_ngcontent-%COMP%]::placeholder{color:#ffffff57}.next-step[_ngcontent-%COMP%]{cursor:pointer;background-color:#0a84ff;color:#fff;font-weight:700;border:none;padding:10px;width:100%;border-radius:5px;display:block;margin:50px auto auto}label[_ngcontent-%COMP%]{font-size:30px;text-align:center}.prescriptionForm[_ngcontent-%COMP%]{display:flex;justify-content:center;width:100%}.container-labal-svg[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;flex-direction:column}.form-group[_ngcontent-%COMP%], .form_group_1[_ngcontent-%COMP%]{display:flex;justify-content:center;flex-direction:column;width:100%;background:#1c1c1e;max-width:400px;padding:40px;min-height:80vh}.form-group[_ngcontent-%COMP%]{margin-bottom:1.5rem;transform:translate(-100%);transition:opacity .5s ease,transform .5s ease}.form-group[_ngcontent-%COMP%]{margin-bottom:1.5rem;opacity:0;transform:translate(-100%);animation:_ngcontent-%COMP%_slideIn .2s ease-out forwards}@keyframes _ngcontent-%COMP%_slideIn{0%{transform:translate(-100%);opacity:0}to{transform:translate(0);opacity:1}}.form-group.visible[_ngcontent-%COMP%]{opacity:1;transform:translate(0)}.text-danger[_ngcontent-%COMP%]{font-size:.85rem}.select-form[_ngcontent-%COMP%]{padding:10px;background-color:#fff;color:#0d0c14;border:none;font-family:Poppins,serif;font-weight:700;font-style:normal;line-height:normal;vertical-align:middle;appearance:none;-webkit-appearance:none;-moz-appearance:none;height:50px}.input-submit[_ngcontent-%COMP%]{border:none;padding:10px;background-color:#fff;border-radius:5px;color:#0d0c14}.input-submit[_ngcontent-%COMP%]:hover{background-color:#ffffff6b}\"]\n    });\n  }\n  return PrescriptionFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}