{"ast":null,"code":"import { __decorate, __param } from \"tslib\";\nimport { CommonModule } from '@angular/common';\nimport { Component, Inject } from '@angular/core';\nimport { AsyncPipe, DOCUMENT, NgIf } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nlet IntroduceComponent = class IntroduceComponent {\n  api;\n  auth;\n  router;\n  doc;\n  constructor(api, auth, router, doc) {\n    this.api = api;\n    this.auth = auth;\n    this.router = router;\n    this.doc = doc;\n  }\n  onSignIn() {\n    console.log('Sign In button clicked!');\n    this.auth.loginWithRedirect();\n  }\n  isAuth() {\n    this.auth.isAuthenticated$.subscribe(isAuthenticated => {\n      if (isAuthenticated) {\n        // Si l'utilisateur est authentifié, redirigez-le vers la page d'accueil\n        this.router.navigate(['/home-page']); // Remplacez \"/home\" par le chemin de votre page d'accueil\n      }\n    });\n  }\n  loginWithRedirect() {\n    this.auth.loginWithRedirect();\n    this.isAuth();\n  }\n  ngOnInit() {\n    // Vérifiez si l'utilisateur est déjà authentifié et redirigez-le\n    this.auth.isAuthenticated$.subscribe(isAuthenticated => {\n      if (isAuthenticated) {\n        this.api.loginUser();\n        // Si l'utilisateur est authentifié, redirigez-le vers la page d'accueil\n        this.router.navigate(['/home-page']); // Remplacez \"/home\" par le chemin de votre page d'accueil\n      }\n    });\n  }\n  logout() {\n    this.auth.logout({\n      logoutParams: {\n        returnTo: this.doc.location.origin\n      }\n    });\n  }\n  onSignUp() {\n    console.log('Sign Up button clicked!');\n    // Ajouter la logique pour Sign Up ici\n  }\n};\nIntroduceComponent = __decorate([Component({\n  selector: 'app-introduce',\n  templateUrl: './introduce.component.html',\n  styleUrls: ['./introduce.component.css'],\n  standalone: true,\n  imports: [CommonModule, AsyncPipe, NgIf, RouterLink]\n}), __param(3, Inject(DOCUMENT))], IntroduceComponent);\nexport { IntroduceComponent };","map":{"version":3,"names":["CommonModule","Component","Inject","AsyncPipe","DOCUMENT","NgIf","RouterLink","IntroduceComponent","api","auth","router","doc","constructor","onSignIn","console","log","loginWithRedirect","isAuth","isAuthenticated$","subscribe","isAuthenticated","navigate","ngOnInit","loginUser","logout","logoutParams","returnTo","location","origin","onSignUp","__decorate","selector","templateUrl","styleUrls","standalone","imports","__param"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/introduce/introduce.component.ts"],"sourcesContent":["import { CommonModule } from '@angular/common';\nimport { Component, Inject } from '@angular/core';\nimport { AuthService } from '@auth0/auth0-angular';\nimport { AsyncPipe, DOCUMENT, NgIf } from '@angular/common';\nimport { Router, RouterLink } from '@angular/router';\n@Component({\n  selector: 'app-introduce',\n  templateUrl: './introduce.component.html',\n  styleUrls: ['./introduce.component.css'],\n  standalone: true,\n  imports: [\n    CommonModule,\n    AsyncPipe,\n    NgIf,\n    RouterLink,\n  ]\n})\nexport class IntroduceComponent {\n\n  constructor(\n    private api:API\n    public auth: AuthService, private router: Router,\n    @Inject(DOCUMENT) private doc: Document\n  ) {}\n  onSignIn() {\n    console.log('Sign In button clicked!');\n    this.auth.loginWithRedirect();\n  }\n  isAuth(){\n    this.auth.isAuthenticated$.subscribe(isAuthenticated => {\n      if (isAuthenticated) {\n        // Si l'utilisateur est authentifié, redirigez-le vers la page d'accueil\n        this.router.navigate(['/home-page']); // Remplacez \"/home\" par le chemin de votre page d'accueil\n      }\n    });\n  }\n  loginWithRedirect() {\n    this.auth.loginWithRedirect();\n    this.isAuth()\n  }\n\n  ngOnInit() {\n    // Vérifiez si l'utilisateur est déjà authentifié et redirigez-le\n    this.auth.isAuthenticated$.subscribe(isAuthenticated => {\n      if (isAuthenticated) {\n        this.api.loginUser();\n        // Si l'utilisateur est authentifié, redirigez-le vers la page d'accueil\n        this.router.navigate(['/home-page']); // Remplacez \"/home\" par le chemin de votre page d'accueil\n      }\n    });\n  }\n\n  logout() {\n    this.auth.logout({ logoutParams: { returnTo: this.doc.location.origin } });\n  }\n\n  onSignUp() {\n    console.log('Sign Up button clicked!');\n    // Ajouter la logique pour Sign Up ici\n  }\n}\n"],"mappings":";AAAA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,SAAS,EAAEC,MAAM,QAAQ,eAAe;AAEjD,SAASC,SAAS,EAAEC,QAAQ,EAAEC,IAAI,QAAQ,iBAAiB;AAC3D,SAAiBC,UAAU,QAAQ,iBAAiB;AAa7C,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAGnBC,GAAA;EACDC,IAAA;EAA2BC,MAAA;EACRC,GAAA;EAH5BC,YACUJ,GAAO,EACRC,IAAiB,EAAUC,MAAc,EACtBC,GAAa;IAF/B,KAAAH,GAAG,GAAHA,GAAG;IACJ,KAAAC,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;IACd,KAAAC,GAAG,GAAHA,GAAG;EAC5B;EACHE,QAAQA,CAAA;IACNC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC,IAAI,CAACN,IAAI,CAACO,iBAAiB,EAAE;EAC/B;EACAC,MAAMA,CAAA;IACJ,IAAI,CAACR,IAAI,CAACS,gBAAgB,CAACC,SAAS,CAACC,eAAe,IAAG;MACrD,IAAIA,eAAe,EAAE;QACnB;QACA,IAAI,CAACV,MAAM,CAACW,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;IAE1C,CAAC,CAAC;EACJ;EACAL,iBAAiBA,CAAA;IACf,IAAI,CAACP,IAAI,CAACO,iBAAiB,EAAE;IAC7B,IAAI,CAACC,MAAM,EAAE;EACf;EAEAK,QAAQA,CAAA;IACN;IACA,IAAI,CAACb,IAAI,CAACS,gBAAgB,CAACC,SAAS,CAACC,eAAe,IAAG;MACrD,IAAIA,eAAe,EAAE;QACnB,IAAI,CAACZ,GAAG,CAACe,SAAS,EAAE;QACpB;QACA,IAAI,CAACb,MAAM,CAACW,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;;IAE1C,CAAC,CAAC;EACJ;EAEAG,MAAMA,CAAA;IACJ,IAAI,CAACf,IAAI,CAACe,MAAM,CAAC;MAAEC,YAAY,EAAE;QAAEC,QAAQ,EAAE,IAAI,CAACf,GAAG,CAACgB,QAAQ,CAACC;MAAM;IAAE,CAAE,CAAC;EAC5E;EAEAC,QAAQA,CAAA;IACNf,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;IACtC;EACF;CACD;AA3CYR,kBAAkB,GAAAuB,UAAA,EAZ9B7B,SAAS,CAAC;EACT8B,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B,CAAC;EACxCC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CACPnC,YAAY,EACZG,SAAS,EACTE,IAAI,EACJC,UAAU;CAEb,CAAC,EAMG8B,OAAA,IAAAlC,MAAM,CAACE,QAAQ,CAAC,E,EALRG,kBAAkB,CA2C9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}