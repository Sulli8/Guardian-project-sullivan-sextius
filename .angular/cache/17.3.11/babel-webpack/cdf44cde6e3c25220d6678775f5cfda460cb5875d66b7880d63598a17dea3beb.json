{"ast":null,"code":"import _asyncToGenerator from \"/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\nimport { faPrescriptionBottle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CommonModule } from '@angular/common';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nlet HomePageComponent = class HomePageComponent {\n  router;\n  apiService;\n  faPrescriptionBottle = faPrescriptionBottle;\n  faPlus = faPlus;\n  hasAnswered = false;\n  message = '';\n  prescriptions = [];\n  constructor(router, apiService) {\n    this.router = router;\n    this.apiService = apiService;\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // Appel initial de la méthode checkNotify\n      _this.callCheckNotify();\n      // Répéter l'appel toutes les 10 secondes\n      setInterval(() => {\n        _this.callCheckNotify();\n      }, 10000);\n      // Vérification des réponses de l'utilisateur\n      _this.apiService.checkIfUserHasAnswered().subscribe(response => {\n        _this.message = response.message; // Affiche le message\n        _this.apiService.handleRedirection(response.valeur); // Redirige en fonction de la valeur\n      }, error => {\n        console.error('Erreur lors de la vérification des réponses:', error);\n        _this.message = 'Erreur lors de la vérification de vos réponses.';\n      });\n      _this.apiService.getPrescription().subscribe(response => {\n        _this.prescriptions = response.prescriptions;\n        console.log(_this.prescriptions);\n      }, error => {\n        console.error('Erreur lors de la vérification des réponses:', error);\n        _this.message = 'Erreur lors de la vérification de vos réponses.';\n      });\n    })();\n  }\n  // Méthode pour appeler checkNotify\n  callCheckNotify() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield _this2.apiService.checkNotify(); // Convertir l'Observable en Promise\n        console.log('Réponse de check-notify', response);\n      } catch (error) {\n        console.error('Erreur lors de l\\'appel à check-notify', error);\n      }\n    })();\n  }\n  viewPrescriptions() {\n    // Redirige vers la page de liste des prescriptions\n    this.router.navigate(['/list-prescriptions']); // Assurez-vous que cette route existe\n  }\n  addPrescription() {\n    this.router.navigate(['/add-prescription']); // Assurez-vous que cette route existe\n  }\n};\nHomePageComponent = __decorate([Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css'],\n  standalone: true,\n  imports: [NavBarComponent, FontAwesomeModule, CommonModule]\n})], HomePageComponent);\nexport { HomePageComponent };","map":{"version":3,"names":["Component","NavBarComponent","faPrescriptionBottle","FontAwesomeModule","CommonModule","faPlus","HomePageComponent","router","apiService","hasAnswered","message","prescriptions","constructor","ngOnInit","_this","_asyncToGenerator","callCheckNotify","setInterval","checkIfUserHasAnswered","subscribe","response","handleRedirection","valeur","error","console","getPrescription","log","_this2","checkNotify","viewPrescriptions","navigate","addPrescription","__decorate","selector","templateUrl","styleUrls","standalone","imports"],"sources":["/Users/sullivan/Desktop/Guardian-project-sullivan-sextius/Guardian-project-sullivan-sextius/src/app/components/home-page/home-page.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router'; // Si vous avez besoin de rediriger l'utilisateur\nimport { NavBarComponent } from '../nav-bar/nav-bar.component';\nimport { faPrescriptionBottle } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { CommonModule } from '@angular/common';\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { ApiService } from 'src/services/api.service';\n@Component({\n  selector: 'app-home-page',\n  templateUrl: './home-page.component.html',\n  styleUrls: ['./home-page.component.css'],\n  standalone:true,\n  imports:[NavBarComponent,FontAwesomeModule,CommonModule]\n})\nexport class HomePageComponent {\n  faPrescriptionBottle = faPrescriptionBottle;\n  faPlus = faPlus;\n  hasAnswered: boolean = false;\n  message: string = '';\n  prescriptions:any = [];\n  constructor(private router: Router,private apiService:ApiService) {}\n\n\n  async ngOnInit() {\n    // Appel initial de la méthode checkNotify\n    this.callCheckNotify();\n    // Répéter l'appel toutes les 10 secondes\n    setInterval(() => {\n      this.callCheckNotify();\n    }, 10000);\n  \n    // Vérification des réponses de l'utilisateur\n    this.apiService.checkIfUserHasAnswered().subscribe(\n      (response) => {\n        this.message = response.message;  // Affiche le message\n        this.apiService.handleRedirection(response.valeur);  // Redirige en fonction de la valeur\n      },\n      (error) => {\n        console.error('Erreur lors de la vérification des réponses:', error);\n        this.message = 'Erreur lors de la vérification de vos réponses.';\n      }\n    );\n\n    this.apiService.getPrescription().subscribe(\n       (response) => {\n        this.prescriptions = response.prescriptions\n        console.log(this.prescriptions)\n      },\n      (error) => {\n        console.error('Erreur lors de la vérification des réponses:', error);\n        this.message = 'Erreur lors de la vérification de vos réponses.';\n      }\n    )\n  }\n  \n  // Méthode pour appeler checkNotify\n  async callCheckNotify() {\n    try {\n      const response = await this.apiService.checkNotify(); // Convertir l'Observable en Promise\n      console.log('Réponse de check-notify', response);\n    } catch (error) {\n      console.error('Erreur lors de l\\'appel à check-notify', error);\n    }\n  }\n  \n  viewPrescriptions() {\n    // Redirige vers la page de liste des prescriptions\n    this.router.navigate(['/list-prescriptions']); // Assurez-vous que cette route existe\n  }\n\n  addPrescription() {\n    this.router.navigate(['/add-prescription']); // Assurez-vous que cette route existe\n  }\n}\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AAEzC,SAASC,eAAe,QAAQ,8BAA8B;AAC9D,SAASC,oBAAoB,QAAQ,mCAAmC;AACxE,SAASC,iBAAiB,QAAQ,kCAAkC;AACpE,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,MAAM,QAAQ,mCAAmC;AASnD,IAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAMRC,MAAA;EAAuBC,UAAA;EAL3CN,oBAAoB,GAAGA,oBAAoB;EAC3CG,MAAM,GAAGA,MAAM;EACfI,WAAW,GAAY,KAAK;EAC5BC,OAAO,GAAW,EAAE;EACpBC,aAAa,GAAO,EAAE;EACtBC,YAAoBL,MAAc,EAASC,UAAqB;IAA5C,KAAAD,MAAM,GAANA,MAAM;IAAiB,KAAAC,UAAU,GAAVA,UAAU;EAAc;EAG7DK,QAAQA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACZ;MACAD,KAAI,CAACE,eAAe,EAAE;MACtB;MACAC,WAAW,CAAC,MAAK;QACfH,KAAI,CAACE,eAAe,EAAE;MACxB,CAAC,EAAE,KAAK,CAAC;MAET;MACAF,KAAI,CAACN,UAAU,CAACU,sBAAsB,EAAE,CAACC,SAAS,CAC/CC,QAAQ,IAAI;QACXN,KAAI,CAACJ,OAAO,GAAGU,QAAQ,CAACV,OAAO,CAAC,CAAE;QAClCI,KAAI,CAACN,UAAU,CAACa,iBAAiB,CAACD,QAAQ,CAACE,MAAM,CAAC,CAAC,CAAE;MACvD,CAAC,EACAC,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;QACpET,KAAI,CAACJ,OAAO,GAAG,iDAAiD;MAClE,CAAC,CACF;MAEDI,KAAI,CAACN,UAAU,CAACiB,eAAe,EAAE,CAACN,SAAS,CACvCC,QAAQ,IAAI;QACZN,KAAI,CAACH,aAAa,GAAGS,QAAQ,CAACT,aAAa;QAC3Ca,OAAO,CAACE,GAAG,CAACZ,KAAI,CAACH,aAAa,CAAC;MACjC,CAAC,EACAY,KAAK,IAAI;QACRC,OAAO,CAACD,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;QACpET,KAAI,CAACJ,OAAO,GAAG,iDAAiD;MAClE,CAAC,CACF;IAAA;EACH;EAEA;EACMM,eAAeA,CAAA;IAAA,IAAAW,MAAA;IAAA,OAAAZ,iBAAA;MACnB,IAAI;QACF,MAAMK,QAAQ,SAASO,MAAI,CAACnB,UAAU,CAACoB,WAAW,EAAE,CAAC,CAAC;QACtDJ,OAAO,CAACE,GAAG,CAAC,yBAAyB,EAAEN,QAAQ,CAAC;OACjD,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;;IAC/D;EACH;EAEAM,iBAAiBA,CAAA;IACf;IACA,IAAI,CAACtB,MAAM,CAACuB,QAAQ,CAAC,CAAC,qBAAqB,CAAC,CAAC,CAAC,CAAC;EACjD;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACxB,MAAM,CAACuB,QAAQ,CAAC,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC;EAC/C;CACD;AA3DYxB,iBAAiB,GAAA0B,UAAA,EAP7BhC,SAAS,CAAC;EACTiC,QAAQ,EAAE,eAAe;EACzBC,WAAW,EAAE,4BAA4B;EACzCC,SAAS,EAAE,CAAC,2BAA2B,CAAC;EACxCC,UAAU,EAAC,IAAI;EACfC,OAAO,EAAC,CAACpC,eAAe,EAACE,iBAAiB,EAACC,YAAY;CACxD,CAAC,C,EACWE,iBAAiB,CA2D7B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}