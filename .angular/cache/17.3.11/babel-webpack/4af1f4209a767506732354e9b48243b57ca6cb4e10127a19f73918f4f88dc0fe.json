{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { EventEmitter } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport Swal from 'sweetalert2';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/services/api.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction WizardComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 14);\n    i0.ɵɵlistener(\"click\", function WizardComponent_div_11_Template_div_click_0_listener() {\n      const i_r2 = i0.ɵɵrestoreView(_r1).index;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.goToStep(i_r2));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const step_r4 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", i_r2 === ctx_r2.currentStep);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \\u00C9tape \", step_r4.step, \" \");\n  }\n}\nfunction WizardComponent_div_13_input_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 19);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_13_input_3_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id], $event) || (ctx_r2.responses[question_r6._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id);\n  }\n}\nfunction WizardComponent_div_13_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 20)(2, \"input\", 21);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_13_div_4_Template_input_ngModelChange_2_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id + \"-yes\"], $event) || (ctx_r2.responses[question_r6._id + \"-yes\"] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 22);\n    i0.ɵɵtext(4, \"Oui\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"label\", 20)(6, \"input\", 21);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_13_div_4_Template_input_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id + \"-no\"], $event) || (ctx_r2.responses[question_r6._id + \"-no\"] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"span\", 22);\n    i0.ɵɵtext(8, \"Non\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id + \"-yes\"]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id + \"-yes\")(\"name\", \"question-\" + question_r6._id + \"-yes\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id + \"-no\"]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id + \"-no\")(\"name\", \"question-\" + question_r6._id + \"-no\");\n  }\n}\nfunction WizardComponent_div_13_input_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"input\", 23);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function WizardComponent_div_13_input_5_Template_input_ngModelChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r8);\n      const question_r6 = i0.ɵɵnextContext().$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      i0.ɵɵtwoWayBindingSet(ctx_r2.responses[question_r6._id], $event) || (ctx_r2.responses[question_r6._id] = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.responses[question_r6._id]);\n    i0.ɵɵproperty(\"id\", \"question-\" + question_r6._id);\n  }\n}\nfunction WizardComponent_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 15);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, WizardComponent_div_13_input_3_Template, 1, 2, \"input\", 16)(4, WizardComponent_div_13_div_4_Template, 9, 6, \"div\", 17)(5, WizardComponent_div_13_input_5_Template, 1, 2, \"input\", 18);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const question_r6 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"for\", \"question-\" + question_r6._id);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(question_r6.text);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"text\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"boolean\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", question_r6.type === \"rating\");\n  }\n}\nfunction WizardComponent_button_19_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 24);\n    i0.ɵɵlistener(\"click\", function WizardComponent_button_19_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.submitWizard());\n    });\n    i0.ɵɵtext(1, \"Soumettre\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let WizardComponent = /*#__PURE__*/(() => {\n  class WizardComponent {\n    router;\n    apiService;\n    title = '';\n    onSubmit = new EventEmitter();\n    currentStep = 0;\n    responses = {};\n    steps;\n    constructor(router, apiService) {\n      this.router = router;\n      this.apiService = apiService;\n    }\n    ngOnInit() {\n      // Charger les questions depuis l'API\n      this.apiService.getQuestions().subscribe(questions => {\n        // Organiser les questions par étape\n        console.log(questions);\n        this.steps = this.organizeQuestionsByStep(questions);\n      });\n    }\n    organizeQuestionsByStep(questions) {\n      const steps = [];\n      questions.questions.forEach(question => {\n        // Chercher l'étape existante pour cette question\n        const step = steps.find(s => s.step === question.step);\n        // Si l'étape n'existe pas encore, on la crée\n        if (!step) {\n          steps.push({\n            step: question.step,\n            questions: [question]\n          });\n        } else {\n          // Si l'étape existe déjà, on ajoute la question\n          step.questions.push(question);\n        }\n      });\n      return steps;\n    }\n    goToStep(index) {\n      if (index >= 0 && index < this.steps.length) {\n        this.currentStep = index;\n      }\n    }\n    nextStep() {\n      if (this.currentStep < this.steps.length - 1) {\n        this.currentStep++;\n      }\n    }\n    previousStep() {\n      if (this.currentStep > 0) {\n        this.currentStep--;\n      }\n    }\n    submitWizard() {\n      const formattedResponses = this.formatResponses(this.responses);\n      // Afficher la fenêtre de confirmation avec SweetAlert2\n      Swal.fire({\n        title: 'Êtes-vous sûr de vouloir soumettre le questionnaire?',\n        text: 'Vous ne pourrez pas modifier vos réponses une fois soumises.',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Oui, soumettre',\n        cancelButtonText: 'Non, annuler',\n        reverseButtons: true // Inverse l'ordre des boutons (Annuler à gauche, Soumettre à droite)\n      }).then(result => {\n        if (result.isConfirmed) {\n          // Si l'utilisateur confirme, on peut envoyer les réponses\n          this.apiService.submitResponses(formattedResponses).subscribe(response => {\n            console.log('Réponses envoyées avec succès', response);\n            // Vérifiez si la réponse du backend indique un succès\n            if (response.message === 'Réponses enregistrées avec succès') {\n              // Redirige l'utilisateur vers la page d'accueil\n              this.router.navigate(['/home-page']); // 'home-page' est l'URL vers la page d'accueil\n            }\n            this.onSubmit.emit({\n              success: true,\n              response\n            });\n            // Émet un événement si l'envoi réussit\n          }, error => {\n            console.error('Erreur lors de l\\'envoi des réponses', error);\n            this.onSubmit.emit({\n              success: false,\n              error\n            }); // Émet un événement en cas d'erreur\n          });\n          Swal.fire('Soumis!', 'Vos réponses ont été envoyées avec succès.', 'success');\n          // Appelez la logique de soumission ici, par exemple envoyer les réponses à votre serveur.\n          // this.apiService.submitResponses(responses);\n        } else {\n          // Si l'utilisateur annule, vous pouvez afficher un message d'annulation\n          Swal.fire('Annulé', 'La soumission du questionnaire a été annulée.', 'info');\n        }\n      });\n    }\n    // Exemple de méthode pour formater les réponses avant de les envoyer (si nécessaire)\n    formatResponses(responses) {\n      // Ici, vous pouvez formater ou ajuster vos réponses avant l'envoi si nécessaire\n      return Object.keys(responses).map(key => ({\n        questionId: key,\n        response: responses[key]\n      }));\n    }\n    static ɵfac = function WizardComponent_Factory(t) {\n      return new (t || WizardComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ApiService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: WizardComponent,\n      selectors: [[\"app-wizard\"]],\n      inputs: {\n        title: \"title\",\n        steps: \"steps\"\n      },\n      outputs: {\n        onSubmit: \"onSubmit\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 20,\n      vars: 6,\n      consts: [[1, \"wizard\"], [1, \"title-questionnary\"], [1, \"icon-guardian\"], [\"version\", \"1.0\", \"xmlns\", \"http://www.w3.org/2000/svg\", \"width\", \"30\", \"height\", \"30\", \"viewBox\", \"0 0 512.000000 512.000000\", \"preserveAspectRatio\", \"xMidYMid meet\"], [\"transform\", \"translate(0.000000,512.000000) scale(0.100000,-0.100000)\", \"fill\", \"#fff\", \"stroke\", \"none\"], [\"d\", \"M1700 4394 c-621 -242 -842 -333 -863 -353 -44 -43 -51 -123 -51 -631 -1 -674 42 -1046 166 -1418 141 -426 475 -845 963 -1212 234 -176 580 -380 645 -380 37 0 192 79 365 187 611 381 1059 881 1236 1382 72 203 131 517 161 851 16 182 17 999 1 1114 -10 66 -16 84 -40 107 -21 20 -236 109 -853 349 -454 177 -841 324 -860 326 -28 4 -202 -61 -870 -322z m1530 -183 c355 -139 691 -270 747 -292 l102 -40 8 -47 c4 -26 8 -231 8 -457 -1 -443 -12 -619 -60 -903 -44 -259 -95 -434 -175 -599 -172 -355 -523 -724 -973 -1023 -118 -79 -310 -190 -327 -190 -32 0 -387 223 -528 332 -413 320 -694 662 -828 1009 -69 178 -128 470 -159 779 -28 283 -30 1068 -3 1096 15 14 1506 592 1523 590 11 -2 310 -117 665 -255z\"], [1, \"span\"], [1, \"steps\"], [\"class\", \"step-class\", 3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"step-content\"], [4, \"ngFor\", \"ngForOf\"], [1, \"navigation\"], [3, \"click\", \"disabled\"], [3, \"click\", 4, \"ngIf\"], [1, \"step-class\", 3, \"click\"], [1, \"label\", 3, \"for\"], [\"class\", \"input-radio on\", \"type\", \"text\", 3, \"ngModel\", \"id\", \"ngModelChange\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"number\", \"min\", \"1\", \"max\", \"5\", 3, \"ngModel\", \"id\", \"ngModelChange\", 4, \"ngIf\"], [\"type\", \"text\", 1, \"input-radio\", \"on\", 3, \"ngModelChange\", \"ngModel\", \"id\"], [1, \"checkbox-container\"], [\"type\", \"checkbox\", 3, \"ngModelChange\", \"ngModel\", \"id\", \"name\"], [1, \"checkbox-label\"], [\"type\", \"number\", \"min\", \"1\", \"max\", \"5\", 3, \"ngModelChange\", \"ngModel\", \"id\"], [3, \"click\"]],\n      template: function WizardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h2\");\n          i0.ɵɵtext(3);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 2);\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(5, \"svg\", 3)(6, \"g\", 4);\n          i0.ɵɵelement(7, \"path\", 5);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵnamespaceHTML();\n          i0.ɵɵelementStart(8, \"span\", 6);\n          i0.ɵɵtext(9, \"Guardian\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(10, \"div\", 7);\n          i0.ɵɵtemplate(11, WizardComponent_div_11_Template, 2, 3, \"div\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 9);\n          i0.ɵɵtemplate(13, WizardComponent_div_13_Template, 6, 5, \"div\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 11)(15, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function WizardComponent_Template_button_click_15_listener() {\n            return ctx.previousStep();\n          });\n          i0.ɵɵtext(16, \"Pr\\u00E9c\\u00E9dent\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"button\", 12);\n          i0.ɵɵlistener(\"click\", function WizardComponent_Template_button_click_17_listener() {\n            return ctx.nextStep();\n          });\n          i0.ɵɵtext(18, \"Suivant\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(19, WizardComponent_button_19_Template, 2, 0, \"button\", 13);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵtextInterpolate(ctx.title);\n          i0.ɵɵadvance(8);\n          i0.ɵɵproperty(\"ngForOf\", ctx.steps);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.steps[ctx.currentStep] == null ? null : ctx.steps[ctx.currentStep].questions);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.currentStep === 0);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"disabled\", ctx.currentStep === ctx.steps.length - 1);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.currentStep === ctx.steps.length - 1);\n        }\n      },\n      dependencies: [FormsModule, i3.DefaultValueAccessor, i3.NumberValueAccessor, i3.CheckboxControlValueAccessor, i3.NgControlStatus, i3.MinValidator, i3.MaxValidator, i3.NgModel, CommonModule, i4.NgForOf, i4.NgIf],\n      styles: [\".wizard[_ngcontent-%COMP%]{max-width:600px;margin:0 auto;font-family:Arial,sans-serif}.steps[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-bottom:20px}.steps[_ngcontent-%COMP%]   div[_ngcontent-%COMP%]{flex:1;text-align:center;padding:10px;cursor:pointer;border-bottom:2px solid #ccc}.steps[_ngcontent-%COMP%]   div.active[_ngcontent-%COMP%]{font-weight:700;border-bottom:2px solid #007bff}.step-content[_ngcontent-%COMP%]{padding:20px;border:1px solid #ccc;border-radius:5px;margin-bottom:20px}.navigation[_ngcontent-%COMP%]{text-align:right}button[_ngcontent-%COMP%]{margin-left:10px;padding:5px 15px;background-color:#007bff;color:#fff;border:none;border-radius:3px;cursor:pointer}input[type=text][_ngcontent-%COMP%]{padding:10px;border:none;border-bottom-width:medium;border-bottom-style:none;border-bottom-color:currentcolor;background:none;border-bottom:1px solid aliceblue;cursor:pointer;color:#fff}input[type=number][_ngcontent-%COMP%]{padding:10px;border:none;border-bottom-width:medium;border-bottom-style:none;border-bottom-color:currentcolor;background:none;border:1px solid aliceblue;cursor:pointer;color:#fff;margin-left:10px}.title-questionnary[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;flex-direction:row;gap:10px}.input-radio.on[_ngcontent-%COMP%]:checked{box-shadow:0 0 0 4px #00eb27;background-color:#51ff6e}.span[_ngcontent-%COMP%]{background:radial-gradient(134.26% 244.64% at 42.92% -80.36%,#b301b3 25.45%,#381dbd);-webkit-background-clip:text;-webkit-text-fill-color:transparent}.icon-guardian[_ngcontent-%COMP%]{display:flex;justify-content:center;align-items:center;flex-direction:column;cursor:pointer}button[_ngcontent-%COMP%]:disabled{background-color:#ccc}.step-class[_ngcontent-%COMP%]{background-color:#007bff3a;color:#007bff}.step-content[_ngcontent-%COMP%]{font-weight:100}.step-content[_ngcontent-%COMP%] > div[_ngcontent-%COMP%]{padding:10px}@media (max-width: 500px){.wizard[_ngcontent-%COMP%]{max-width:400px}}.checkbox-container[_ngcontent-%COMP%]{display:flex;align-items:center;margin-bottom:10px}.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:20px;height:20px;margin-right:10px;cursor:pointer}.checkbox-label[_ngcontent-%COMP%]{font-size:14px;color:#fff;font-weight:700}.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:checked{background-color:#4caf50}.checkbox-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]:focus{outline:none;border:2px solid #4CAF50}\"]\n    });\n  }\n  return WizardComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}